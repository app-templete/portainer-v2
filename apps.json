{
  "version": "2",
  "templates": [
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "[Adguardhome](https://adguard.com/en/adguard-home/overview.html) AdGuard Home is a network-wide software for blocking ads & tracking.",
      "image": "adguard/adguardhome:latest",
      "logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
      "name": "Adguardhome",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "68:68/udp",
        "80:80/tcp",
        "443:443/tcp",
        "443:443/udp",
        "3000:3000/tcp",
        "853:853/tcp",
        "784:784/udp",
        "853:853/udp",
        "8853:8853/udp",
        "5443:5443/tcp",
        "5443:5443/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Adguardhome",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/config",
          "container": "/opt/adguardhome/conf"
        },
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/work",
          "container": "/opt/adguardhome/work"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/New_York",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "CONFIGFILE",
          "label": "CONFIGFILE",
          "default": "/config/adguardhome-sync.yaml",
          "description": "Set a custom config file."
        }
      ],
      "description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
      "image": "linuxserver/adguardhome-sync:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
      "name": "Adguardhome-sync",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Adguardhome-sync",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/adguardhome-sync/config",
          "container": "/config"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver/docker-adguardhome-sync#usage\" target=\"_blank\">https://github.com/linuxserver/docker-adguardhome-sync#usage</a><br><br><br>"
    },
    {
      "categories": [
        "Music"
      ],
      "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "airsonic"
        },
        {
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS",
          "set": "-Xms256m -Xmx512m"
        }
      ],
      "image": "lscr.io/linuxserver/airsonic:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/airsonic-logo.png",
      "name": "airsonic",
      "platform": "linux",
      "ports": [
        "4040:4040/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Airsonic",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Music",
          "container": "/music"
        },
        {
          "bind": "/portainer/Files/AppData/Airsonic/Playlists",
          "container": "/playlists"
        },
        {
          "bind": "/portainer/Podcasts",
          "container": "/podcasts"
        },
        {
          "bind": "/portainer/Files/AppData/Airsonic/Media",
          "container": "/media"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Airsonic/",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Airsonic-advanced",
      "name": "Airsonic-advanced",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/airsonic-advanced/config<br>mkdir -p /volume1/docker/airsonic-advanced/music<br>mkdir -p /volume1/docker/airsonic-advanced/playlists<br>mkdir -p /volume1/docker/airsonic-advanced/podcasts<br>mkdir -p /volume1/docker/airsonic-advanced/media</p>",
      "description": "[Airsonic-advanced](https://github.com/airsonic-advanced/airsonic-advanced) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png",
      "image": "linuxserver/airsonic-advanced:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "CONTEXT_PATH",
          "label": "CONTEXT_PATH",
          "default": "<URL_BASE>",
          "description": "For setting url-base in reverse proxy setups."
        },
        {
          "name": "JAVA_OPTS",
          "label": "JAVA_OPTS",
          "default": "<options>",
          "description": "For passing additional java options."
        }
      ],
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/airsonic-advanced/config"
        },
        {
          "container": "/music",
          "bind": "/volume1/docker/airsonic-advanced/music"
        },
        {
          "container": "/playlists",
          "bind": "/volume1/docker/airsonic-advanced/playlists"
        },
        {
          "container": "/podcasts",
          "bind": "/volume1/docker/airsonic-advanced/podcasts"
        },
        {
          "container": "/media",
          "bind": "/volume1/docker/airsonic-advanced/media"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Apprise-api",
      "name": "Apprise-api",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/apprise-api/config</p>",
      "description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
      "categories": [
        "Notifications"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
      "image": "linuxserver/apprise-api:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/apprise-api/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Games"
      ],
      "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "justarchi/archisteamfarm:latest",
      "logo": "https://raw.githubusercontent.com/JustArchiNET/ArchiSteamFarm/main/resources/ASF_184x184.png",
      "name": "archisteamfarm",
      "platform": "linux",
      "ports": [
        "1242:1242/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ArchiSteamFarm",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ArchiSteamFarm/config",
          "container": "/app/config"
        },
        {
          "bind": "/portainer/Files/AppData/ArchiSteamFarm/plugins",
          "container": "/app/plugins"
        },
        {
          "bind": "/portainer/Files/AppData/ArchiSteamFarm/logs",
          "container": "/app/logs"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
      "env": [
        {
          "default": "*",
          "label": "ALLOWED_HOSTS",
          "name": "ALLOWED_HOSTS"
        },
        {
          "default": "750m",
          "label": "MEDIA_MAX_SIZE",
          "name": "MEDIA_MAX_SIZE"
        },
        {
          "default": "true",
          "label": "PUBLIC_INDEX",
          "name": "PUBLIC_INDEX"
        },
        {
          "default": "true",
          "label": "PUBLIC_SNAPSHOTS",
          "name": "PUBLIC_SNAPSHOTS"
        },
        {
          "default": "false",
          "label": "PUBLIC_ADD_VIEW",
          "name": "PUBLIC_ADD_VIEW"
        }
      ],
      "image": "archivebox/archivebox:master",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
      "name": "archivebox",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://archivebox.io/\" target=\"_blank\">https://archivebox.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki/Docker\" target=\"_blank\">https://github.com/ArchiveBox/ArchiveBox/wiki/Docker</a><br><br><br>By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
      "platform": "linux",
      "ports": [
        "8002:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Archivebox",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/archivebox",
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Audacity",
      "name": "Audacity",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/audacity/config</p>",
      "description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
      "image": "linuxserver/audacity:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/audacity/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Authentication"
      ],
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "env": [
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "authelia/authelia:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/authelia.png",
      "name": "authelia",
      "note": "Requires a configuration.yml file in order to work. Documentation is Available here.",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Authelia",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Authelia",
          "container": "/etc/authelia/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Babybuddy",
      "name": "Babybuddy",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/babybuddy/config</p>",
      "description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
      "platform": "linux",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
      "image": "linuxserver/babybuddy:latest",
      "env": [
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "CSRF_TRUSTED_ORIGINS",
          "label": "CSRF_TRUSTED_ORIGINS",
          "default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
          "description": "Add any address you'd like to access babybuddy at (comma separated, no spaces)"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/babybuddy/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Video",
        "Music"
      ],
      "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/bazarr:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bazarr.png",
      "name": "bazarr",
      "platform": "linux",
      "ports": [
        "6767:6767/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Bazarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Bazarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ]
    },
    {
      "categories": [
        "Music"
      ],
      "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/beets:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/beets-icon.png",
      "name": "beets",
      "platform": "linux",
      "ports": [
        "8337:8337/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Beets",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Beets",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ]
    },
    {
      "type": 1,
      "title": "Bitwarden RS Backup",
      "name": "bitwarden_backup",
      "description": "A Docker container that backs up another bitwardenrs container's SQLite database.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "image": "bruceforce/bw_backup:latest",
      "categories": [
        "Other",
        "Tools"
      ],
      "restart_policy": "always",
      "platform": "linux",
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/AppData/Bitwarden-rs/Config"
        },
        {
          "container": "/data",
          "bind": "/portainer/AppData/Bitwarden-rs/Data"
        },
        {
          "container": "/backup",
          "bind": "/portainer/AppData/Bitwarden-rs/DB-Backup"
        }
      ],
      "env": [
        {
          "name": "BACKUP_FILE",
          "label": "BACKUP_FILE",
          "default": "/backup/bitwarden.sqlite3"
        },
        {
          "name": "CRON_TIME",
          "label": "CRON_TIME",
          "default": "0 5 * * *"
        }
      ]
    },
    {
      "type": 3,
      "title": "Bitwarden Stack",
      "description": "Stack with bitwarden-rs container and an nightly backup routine.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "categories": [
        "Utilities"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/bitwarden.yml"
      },
      "env": [
        {
          "name": "PORT",
          "label": "PORT",
          "default": "5430"
        },
        {
          "name": "CRON_TIME",
          "label": "CRON_TIME",
          "default": "0 5 * * *"
        },
        {
          "name": "UUID",
          "label": "UUID",
          "default": "1000"
        },
        {
          "name": "GID",
          "label": "GID",
          "default": "100"
        },
        {
          "name": "ADMIN_TOKEN",
          "label": "ADMIN_TOKEN",
          "default": "some_really_long_key"
        },
        {
          "name": "DOMAIN",
          "label": "DOMAIN",
          "default": "https://bw.domain.com"
        }
      ]
    },
    {
      "type": 1,
      "title": "Blender",
      "name": "Blender",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/blender/config</p>",
      "description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
      "image": "linuxserver/blender:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        },
        {
          "name": "KEYBOARD",
          "label": "KEYBOARD",
          "default": "en-us-qwerty",
          "description": "See the keyboard layouts section for more information and options."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/blender/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Boinc",
      "name": "Boinc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/boinc/config</p>",
      "description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
      "categories": [
        "Research"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
      "image": "linuxserver/boinc:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD",
          "default": "",
          "description": "Optionally set a password for the gui."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/boinc/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Books",
        "Other"
      ],
      "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "booksonic",
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH"
        }
      ],
      "image": "lscr.io/linuxserver/booksonic:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/booksonic.png",
      "name": "booksonic",
      "platform": "linux",
      "ports": [
        "4040:4040/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Booksonic",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/Podcasts",
          "container": "/podcast"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Booksonic",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Booksonic-air",
      "name": "Booksonic-air",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/booksonic-air/config<br>mkdir -p /volume1/docker/booksonic-air/audiobooks<br>mkdir -p /volume1/docker/booksonic-air/podcasts<br>mkdir -p /volume1/docker/booksonic-air/othermedia</p>",
      "description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of: * Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. * Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
      "categories": [
        "Audio"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
      "image": "linuxserver/booksonic-air:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "CONTEXT_PATH",
          "label": "CONTEXT_PATH",
          "default": "url-base",
          "description": "Base url for use with reverse proxies etc."
        }
      ],
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/booksonic-air/config"
        },
        {
          "container": "/audiobooks",
          "bind": "/volume1/docker/booksonic-air/audiobooks"
        },
        {
          "container": "/podcasts",
          "bind": "/volume1/docker/booksonic-air/podcasts"
        },
        {
          "container": "/othermedia",
          "bind": "/volume1/docker/booksonic-air/othermedia"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Wiki"
      ],
      "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bookstack2.png",
      "note": "Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/bookstack.yml",
        "url": "https://github.com/SelfhostedPro/selfhosted_templates"
      },
      "title": "Bookstack",
      "type": 3
    },
    {
      "type": 1,
      "title": "Budge",
      "name": "Budge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/budge/config</p>",
      "description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/budge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/budge/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Cloud",
        "Books"
      ],
      "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/cops:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cops-icon.png",
      "name": "cops",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "COPS",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Cops",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Webserver"
      ],
      "description": "Caddy - The Ultimate Server with Automatic HTTPS.  Need to run tools/install_caddy.sh before installing the template.",
      "image": "caddy:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/caddy.png",
      "name": "caddy",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://caddyserver.com/\" target=\"_blank\">https://caddyserver.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/caddy\" target=\"_blank\">https://hub.docker.com/_/caddy</a><br><br><b>Pre-installation script must be RAN before you install: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_caddy.sh\" target=\"_blank\">install_caddy.sh</a><br><br>Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "2019:2019/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Caddy",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Data",
          "container": "/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Config",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Caddyfile",
          "container": "/etc/caddy/Caddyfile"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Books"
      ],
      "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/calibre-web:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/calibre-web-icon.png",
      "name": "calibre-web",
      "platform": "linux",
      "ports": [
        "8083:8083/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Calibre Web",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Calibre-web",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/cardigann:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
      "name": "cardigann",
      "platform": "linux",
      "ports": [
        "5060:5060/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Cardigann",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Cardigann",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Photo"
      ],
      "description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "CHEVERETO_DB_HOST",
          "name": "CHEVERETO_DB_HOST",
          "set": ""
        },
        {
          "label": "CHEVERETO_DB_USERNAME",
          "name": "CHEVERETO_DB_USERNAME",
          "set": ""
        },
        {
          "label": "CHEVERETO_DB_PASSWORD",
          "name": "CHEVERETO_DB_PASSWORD",
          "set": ""
        },
        {
          "label": "CHEVERETO_DB_NAME",
          "name": "CHEVERETO_DB_NAME",
          "set": ""
        },
        {
          "label": "CHEVERETO_DB_PREFIX",
          "name": "CHEVERETO_DB_PREFIX",
          "set": ""
        }
      ],
      "image": "nmtan/chevereto:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/Chevereto.png",
      "name": "Chevereto",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Chevereto",
      "type": 1,
      "volumes": [
        {
          "container": "/var/www/html/images"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Save recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
      "image": "gregyankovoy/chowdown:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/chowdown.png",
      "name": "Chowdown",
      "platform": "linux",
      "ports": [
        "4000:4000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Chowdown",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Chowdown",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Cloud9",
      "name": "Cloud9",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cloud9/config<br>mkdir -p /volume1/docker/cloud9/code<br></p>",
      "description": "[Cloud9](https://github.com/c9/core) Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
      "categories": [
        "Development"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
      "image": "linuxserver/cloud9:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "GITURL",
          "label": "GITURL",
          "default": "https://github.com/linuxserver/docker-cloud9.git",
          "description": "Specify a git repo to checkout on first startup"
        },
        {
          "name": "USERNAME",
          "label": "USERNAME",
          "default": "",
          "description": "Optionally specify a username for http auth"
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD",
          "default": "",
          "description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/cloud9/config"
        },
        {
          "container": "/code",
          "bind": "/volume1/docker/cloud9/code"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "DNS",
        "Tools"
      ],
      "description": "Cloudflare DDNS - A small and fast DDNS updater for Cloudflare.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "",
          "label": "CF_API_TOKEN",
          "name": "CF_API_TOKEN"
        },
        {
          "default": "",
          "label": "DOMAINS (Comma Separated List)",
          "name": "DOMAINS"
        },
        {
          "default": "true",
          "label": "PROXIED",
          "name": "PROXIED"
        }
      ],
      "image": "favonia/cloudflare-ddns:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
      "name": "cloudflare-ddns",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Cloudflare DDNS",
      "type": 1,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/favonia/cloudflare-ddns/\" target=\"_blank\">https://github.com/favonia/cloudflare-ddns/</a><br><br><br>"
    },
    {
      "type": 2,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/cockroachdb/docker-stack.yml"
      }
    },
    {
      "type": 4,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/cockroachdb/edge/docker-stack.yml"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "GUID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "label": "SUDO_PASSWORD",
          "name": "SUDO_PASSWORD"
        },
        {
          "default": "example.my.domain",
          "label": "PROXY_DOMAIN",
          "name": "PROXY_DOMAIN"
        }
      ],
      "image": "lscr.io/linuxserver/code-server:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/code-server.png",
      "name": "code-server",
      "platform": "linux",
      "ports": [
        "8443:8443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Code Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Code-Server",
          "container": "/config"
        }
      ]
    },
    {
      "type": 3,
      "title": "CodiMD",
      "name": "codimd",
      "description": "CodiMD lets you create realtime collaborative markdown notes on all platforms. Inspired by Hackpad, with more focus on speed and flexibility.",
      "categories": [
        "Wiki"
      ],
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/codimd.yml"
      },
      "env": [
        {
          "name": "MARIADB_VOLUME",
          "label": "MARIADB_VOLUME",
          "default": "/portainer/AppData/CodiMD/DB"
        },
        {
          "name": "CODIMD_VOLUME",
          "label": "CODIMD_COLUME",
          "default": "/portainer/AppData/CodiMD/Config"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/London"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD"
        },
        {
          "name": "ROOT_PASSWORD",
          "label": "ROOT_PASSWORD"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "3001"
        }
      ]
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/codiad:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/codiad-icon.png",
      "name": "codiad",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Codiad",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Codiad",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "categories": [
        "development"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": [
        "8080/tcp",
        "8443/tcp"
      ]
    },
    {
      "type": 1,
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": [
        "8080/tcp",
        "8443/tcp"
      ],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/couchpotato:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/couchpotato-icon.png",
      "name": "couchpotato",
      "platform": "linux",
      "ports": [
        "5050:5050/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "CouchPotato",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Couchpotato",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ]
    },
    {
      "type": 1,
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": [
        "4200/tcp",
        "4300/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Music"
      ],
      "description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/daapd:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
      "name": "daapd",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Daapd",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Daapd",
          "container": "/config"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ]
    },
    {
      "type": 1,
      "title": "Darktable",
      "name": "Darktable",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/darktable/config</p>",
      "description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
      "image": "linuxserver/darktable:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/darktable/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Another application bookmark dashboard, with fun features.",
      "image": "rmountjoy/dashmachine:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dashmachine_logo.png",
      "name": "dashmachine",
      "platform": "linux",
      "ports": [
        "5000:5000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "DashMachine",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Dashmachine",
          "container": "/dashmachine/dashmachine/user_data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "categories": [
        "Monitoring"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ]
    },
    {
      "title": "Datadog agent",
      "type": 2,
      "categories": [
        "Monitoring"
      ],
      "description": "Collect events and metrics",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/datadog-agent/docker-stack.yml"
      },
      "env": [
        {
          "name": "API_KEY",
          "label": "Datadog API key"
        }
      ]
    },
    {
      "categories": [
        "FTP",
        "Other",
        "Tools"
      ],
      "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/davos:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/davos.png",
      "name": "davos",
      "platform": "linux",
      "ports": [
        "8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Davos",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Davos",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ddclient",
      "name": "Ddclient",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ddclient/config</p>",
      "description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
      "categories": [
        "Networking"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
      "image": "linuxserver/ddclient:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/ddclient/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Music"
      ],
      "description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
      "image": "registry.gitlab.com/bockiii/deemix-docker",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/deemix.png",
      "name": "deemix",
      "note": "Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to this page for userToken details.",
      "platform": "linux",
      "ports": [
        "9666:9666/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "DeeMix",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/DeeMix",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "UMASK",
          "name": "UMASK",
          "set": "000"
        }
      ],
      "image": "lscr.io/linuxserver/deluge:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/deluge-icon.png",
      "namme": "deluge",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Deluge",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Deluge",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "VPN",
        "Tools"
      ],
      "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
      "env": [
        {
          "default": "1001",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1001",
          "label": "PGID",
          "name": "PUID"
        },
        {
          "default": "MULLVAD",
          "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
          "label": "OPENVPN_PROVIDER",
          "name": "OPENVPN_PROVIDER"
        },
        {
          "label": "OPENVPN_USERNAME",
          "name": "OPENVPN_USERNAME"
        },
        {
          "label": "OPENVPN_PASSWORD",
          "name": "OPENVPN_PASSWORD"
        }
      ],
      "image": "sgtsquiggs/deluge-openvpn:latest",
      "name": "deluge-openvpn",
      "platform": "linux",
      "ports": [
        "8112:8112/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Deluge openvpn",
      "type": 1,
      "volumes": [
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Digikam",
      "name": "Digikam",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/digikam/config</p>",
      "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
      "categories": [
        "Photography"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
      "image": "linuxserver/digikam:latest",
      "network": "host",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        },
        {
          "name": "KEYBOARD",
          "label": "KEYBOARD",
          "default": "en-us-qwerty",
          "description": "See the keyboard layouts section for more information and options."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/digikam/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Dillinger",
      "name": "Dillinger",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dillinger/config</p>",
      "description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
      "categories": [
        "Development"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
      "image": "linuxserver/dillinger:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/dillinger/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Diskover",
      "name": "Diskover",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/diskover/config<br>mkdir -p /volume1/docker/diskover/data</p>",
      "description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
      "image": "linuxserver/diskover:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "ES_HOST",
          "label": "ES_HOST",
          "default": "elasticsearch",
          "description": "ElasticSearch host (optional)"
        },
        {
          "name": "ES_PORT",
          "label": "ES_PORT",
          "default": "9200",
          "description": "ElasticSearch port (optional)"
        },
        {
          "name": "ES_USER",
          "label": "ES_USER",
          "default": "elastic",
          "description": "ElasticSearch username (optional)"
        },
        {
          "name": "ES_PASS",
          "label": "ES_PASS",
          "default": "changeme",
          "description": "ElasticSearch password (optional)"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/diskover/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/diskover/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Docker-compose",
      "name": "Docker-compose",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/docker-compose/config</p>",
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/docker-compose:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/docker-compose/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Dokuwiki",
      "name": "Dokuwiki",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dokuwiki/config</p>",
      "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
      "image": "linuxserver/dokuwiki:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/dokuwiki/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "HomeAutomation",
        "Management"
      ],
      "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/domoticz:latest",
      "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
      "name": "domoticz",
      "platform": "linux",
      "ports": [
        "1443:1443/tcp",
        "6144:6144/tcp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Domoticz",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Domoticz",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Doplarr",
      "name": "Doplarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doplarr/config</p>",
      "description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
      "image": "linuxserver/doplarr:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "DISCORD__TOKEN",
          "label": "DISCORD__TOKEN",
          "default": "<discord__token>",
          "description": "Specify your discord bot token."
        },
        {
          "name": "OVERSEERR__API",
          "label": "OVERSEERR__API",
          "default": "<overseerr__api>",
          "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "OVERSEERR__URL",
          "label": "OVERSEERR__URL",
          "default": "http://localhost:5055",
          "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "RADARR__API",
          "label": "RADARR__API",
          "default": "<radarr__api>",
          "description": "Specify your Radarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "RADARR__URL",
          "label": "RADARR__URL",
          "default": "http://localhost:7878",
          "description": "Specify your Radarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__API",
          "label": "SONARR__API",
          "default": "<sonarr__api>",
          "description": "Specify your Sonarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__URL",
          "label": "SONARR__URL",
          "default": "http://localhost:8989",
          "description": "Specify your Sonarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "DISCORD__MAX_RESULTS",
          "label": "DISCORD__MAX_RESULTS",
          "default": "25",
          "description": "Sets the maximum size of the search results selection"
        },
        {
          "name": "DISCORD__REQUESTED_MSG_STYLE",
          "label": "DISCORD__REQUESTED_MSG_STYLE",
          "default": ":plain",
          "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`"
        },
        {
          "name": "SONARR__QUALITY_PROFILE",
          "label": "SONARR__QUALITY_PROFILE",
          "default": "<not_set_by_default>",
          "description": "The name of the quality profile to use by default for Sonarr"
        },
        {
          "name": "RADARR__QUALITY_PROFILE",
          "label": "RADARR__QUALITY_PROFILE",
          "default": "<not_set_by_default>",
          "description": "The name of the quality profile to use by default for Radarr"
        },
        {
          "name": "SONARR__ROOTFOLDER",
          "label": "SONARR__ROOTFOLDER",
          "default": "<not_set_by_default>",
          "description": "The root folder to use by default for Sonarr"
        },
        {
          "name": "RADARR__ROOTFOLDER",
          "label": "RADARR__ROOTFOLDER",
          "default": "<not_set_by_default>",
          "description": "The root folder to use by default for Radarr"
        },
        {
          "name": "SONARR__LANGUAGE_PROFILE",
          "label": "SONARR__LANGUAGE_PROFILE",
          "default": "<not_set_by_default>",
          "description": "The name of the language profile to use by default for Sonarr"
        },
        {
          "name": "OVERSEERR__DEFAULT_ID",
          "label": "OVERSEERR__DEFAULT_ID",
          "default": "<not_set_by_default>",
          "description": "The Overseerr user id to use by default if there is no associated discord account for the requester"
        },
        {
          "name": "PARTIAL_SEASONS",
          "label": "PARTIAL_SEASONS",
          "default": "true",
          "description": "Sets whether users can request partial seasons."
        },
        {
          "name": "LOG_LEVEL",
          "label": "LOG_LEVEL",
          "default": ":info",
          "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`"
        },
        {
          "name": "JAVA_OPTS",
          "label": "JAVA_OPTS",
          "default": "<not_set_by_default>",
          "description": "For passing additional java options."
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/doplarr/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Doublecommander",
      "name": "Doublecommander",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doublecommander/config<br>mkdir -p /volume1/docker/doublecommander/data</p>",
      "description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
      "categories": [
        "File Management"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
      "image": "linuxserver/doublecommander:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/doublecommander/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/doublecommander/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Dozzle is a real-time log viewer for docker containers.",
      "image": "amir20/dozzle:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dozzle.png",
      "name": "dozzle",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dozzle.dev/\" target=\"_blank\">https://dozzle.dev/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/amir20/dozzle\" target=\"_blank\">https://github.com/amir20/dozzle</a><br><br><br>View logs for docker containers.",
      "platform": "linux",
      "ports": [
        "8888:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Dozzle",
      "type": 1,
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Security"
      ],
      "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
      "image": "raesene/dradis:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dradis-logo.png",
      "name": "dradis",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Dradis",
      "type": 1
    },
    {
      "categories": [
        "Other",
        "CMD",
        "Web",
        "Tools"
      ],
      "description": "Drupal CMS.  Make sure you run the install script under tools before installing.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "drupal",
          "label": "DATABASE_NAME",
          "name": "DATABASE_NAME"
        },
        {
          "default": "drupal",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/drupal.png",
      "name": "drupal",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/drupal.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Drupal",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.drupal.org/\" target=\"_blank\">https://www.drupal.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration\" target=\"_blank\">https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration</a><br><br><b>Pre-installation script must be RAN before you install: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_drupal.sh\" target=\"_blank\">install_drupal.sh</a><br><br>"
    },
    {
      "categories": [
        "DNS",
        "Tools"
      ],
      "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
      "env": [
        {
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS",
          "set": ""
        },
        {
          "label": "TOKEN",
          "name": "TOKEN",
          "set": ""
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/duckdns:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duckdns.png",
      "name": "duckdns",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Duck DNS",
      "type": 1
    },
    {
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Productivity",
        "Tools"
      ],
      "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/duplicati:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duplicati-icon.png",
      "name": "duplicati",
      "platform": "linux",
      "ports": [
        "8200:8200/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Duplicati",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Duplicati",
          "container": "/config"
        },
        {
          "container": "/tmp"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.\r\nYou will need to create /portainer/Files/AppData/Config/Mosquitto/config/mosquitto.conf and if needed your password file.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
      "hostname": "rpi-mosquitto",
      "image": "eclipse-mosquitto:latest",
      "logo": "https://raw.githubusercontent.com/docker-library/docs/757578e3a44e5460a8a11d32a81776f8b74231a9/eclipse-mosquitto/logo.png",
      "name": "mosquitto",
      "platform": "linux",
      "ports": [
        "1883:1883/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Eclipse Mosquitto",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mosquitto/config",
          "container": "/mosquitto/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Mosquitto/data",
          "container": "/mosquitto/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Mosquitto/log",
          "container": "/mosquitto/log"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/eclipse-mosquitto\" target=\"_blank\">https://hub.docker.com/_/eclipse-mosquitto</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": [
        "9200/tcp",
        "9300/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ]
    },
    {
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/emby:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/emby.png",
      "name": "emby",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Emby",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Emby",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
      "image": "lscr.io/linuxserver/embystat:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/embystat.png",
      "name": "embystat",
      "note": "Access the ui at your-ip:6555. Follow the setup wizard on initial install. Then configure the required services.",
      "platform": "linux",
      "ports": [
        "6555:6555/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "EmbyStat",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/EmbyStat",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Emulatorjs",
      "name": "Emulatorjs",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emulatorjs/config<br>mkdir -p /volume1/docker/emulatorjs/data</p>",
      "description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
      "image": "linuxserver/emulatorjs:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "80:80/tcp",
        "4001:4001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/emulatorjs/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/emulatorjs/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Endlessh",
      "name": "Endlessh",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/endlessh/config</p>",
      "description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
      "platform": "linux",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
      "image": "linuxserver/endlessh:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "MSDELAY",
          "label": "MSDELAY",
          "default": "10000",
          "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines."
        },
        {
          "name": "MAXLINES",
          "label": "MAXLINES",
          "default": "32",
          "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes."
        },
        {
          "name": "MAXCLIENTS",
          "label": "MAXCLIENTS",
          "default": "4096",
          "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue."
        },
        {
          "name": "LOGFILE",
          "label": "LOGFILE",
          "default": "false",
          "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped)."
        },
        {
          "name": "BINDFAMILY",
          "label": "BINDFAMILY",
          "default": "",
          "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both."
        }
      ],
      "ports": [
        "22:2222/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/endlessh/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 3,
      "title": "FDO",
      "description": "FDO",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/fdo/docker-stack.yml"
      },
      "env": [
        {
          "name": "owner_api_user",
          "label": "API Username"
        },
        {
          "name": "owner_api_password",
          "label": "API Password"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ffmpeg",
      "name": "Ffmpeg",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ffmpeg/config</p>",
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/ffmpeg:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/ffmpeg/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Web File Browser which can be used as a middleware or standalone app.",
      "image": "80x86/filebrowser:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/filebrowser.png",
      "name": "filebrowser",
      "note": "The default user and password is admin/admin.",
      "platform": "linux",
      "ports": [
        "8082:8082/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FileBrowser",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/FileBrowser",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config",
          "container": "/myfiles"
        }
      ]
    },
    {
      "type": 1,
      "title": "Filezilla",
      "name": "Filezilla",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/filezilla/config</p>",
      "description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
      "image": "linuxserver/filezilla:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/filezilla/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Firefox",
      "name": "Firefox",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/firefox/config</p>",
      "description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
      "image": "linuxserver/firefox:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/firefox/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Fleet",
      "name": "Fleet",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fleet/config</p>",
      "description": "[Fleet](https://github.com/linuxserver/fleet) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/fleet:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "fleet_admin_authentication_type",
          "label": "fleet_admin_authentication_type",
          "default": "DATABASE",
          "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
        },
        {
          "name": "fleet_database_url",
          "label": "fleet_database_url",
          "default": "jdbc:mariadb://<url>:3306/fleet",
          "description": "The full JDBC connection string to the Fleet database"
        },
        {
          "name": "fleet_database_username",
          "label": "fleet_database_username",
          "default": "fleet_user",
          "description": "The username with the relevant GRANT permissions for the database"
        },
        {
          "name": "fleet_database_password",
          "label": "fleet_database_password",
          "default": "dbuserpassword",
          "description": "The database user's password."
        },
        {
          "name": "fleet_admin_secret",
          "label": "fleet_admin_secret",
          "default": "randomstring",
          "description": "A string used as part of the password key derivation process."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/fleet/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Foldingathome",
      "name": "Foldingathome",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/foldingathome/config</p>",
      "description": "[Folding@home](https://foldingathome.org/) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
      "platform": "linux",
      "logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
      "image": "linuxserver/foldingathome:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "7396:7396/tcp",
        "36330:36330/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/foldingathome/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Games"
      ],
      "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
      "env": [
        {
          "default": "John",
          "label": "Foundry Account Name",
          "name": "FOUNDRY_USERNAME"
        },
        {
          "default": "password",
          "label": "Foundry Password",
          "name": "FOUNDRY_PASSWORD"
        },
        {
          "default": "changeme",
          "label": "Instance Admin Password",
          "name": "FOUNDRY_ADMIN_KEY"
        },
        {
          "default": "true",
          "label": "CONTAINER_PRESERVE_CONFIG",
          "name": "CONTAINER_PRESERVE_CONFIG"
        }
      ],
      "image": "felddy/foundryvtt:release",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
      "name": "FoundryVTT",
      "platform": "linux",
      "ports": [
        "30000:30000/tcp"
      ],
      "restart_polocy": "unless-stopped",
      "title": "FoundryVTT Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/foundryvtt",
          "container": "/data"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>"
    },
    {
      "categories": [
        "Other"
      ],
      "description": "A free, self-hostable rss aggregator…",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/freshrss:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/freshrss-icon.png",
      "name": "freshrss",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FreshRSS",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/freshrss",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Web",
        "Books",
        "Tools"
      ],
      "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/gazee:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/gazee-logo.png",
      "name": "gazee",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Gazee",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Gazee",
          "container": "/config"
        },
        {
          "bind": "/portainer/Comics",
          "container": "/comics"
        },
        {
          "bind": "/portainer/Files/AppData/Gazee",
          "container": "/mylar"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ghost",
      "description": "Free and open-source blogging platform",
      "categories": [
        "blog"
      ],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
      "image": "ghost:latest",
      "ports": [
        "2368/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/ghost/content"
        }
      ]
    },
    {
      "type": 1,
      "title": "Gitlab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
      "categories": [
        "development",
        "project-management"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": [
        "80/tcp",
        "443/tcp",
        "22/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Grav",
      "name": "Grav",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grav/config</p>",
      "description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
      "categories": [
        "Web Platform"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
      "image": "linuxserver/grav:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/grav/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Finance"
      ],
      "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utulity.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "Timezone",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/grocy:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/grocy_logo.png",
      "name": "grocy",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Grocy",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Grocy",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A clientless remote desktop gateway.",
      "image": "oznu/guacamole:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/guacamole.png",
      "name": "guacamole",
      "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Guacamole",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Guacamole",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Guacd",
      "name": "Guacd",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "description": "[Guacd](https://guacamole.apache.org/) - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png",
      "image": "linuxserver/guacd:latest",
      "ports": [
        "4822:4822/tcp"
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Video",
        "Music",
        "Other"
      ],
      "description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/htpcmanager:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/htpcmanager-icon.png",
      "name": "htpcmanager",
      "platform": "linux",
      "ports": [
        "8085:8085/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "HTPC Manager",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/HTPCmanager",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Habridge",
      "name": "Habridge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/habridge/config</p>",
      "description": "[Habridge](http://bwssystems.com/#/habridge) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
      "image": "linuxserver/habridge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "SEC_KEY",
          "label": "SEC_KEY",
          "default": "<Your Key To Encrypt Security Data>",
          "description": "Key used to secure communication."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "50000:50000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/habridge/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Music"
      ],
      "description": null,
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/headphones:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/headphones-icon.png",
      "name": "headphones",
      "platform": "linux",
      "ports": [
        "8181:8181/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Headphones",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Headphones",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/Downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ]
    },
    {
      "type": 1,
      "title": "Healthchecks",
      "name": "Healthchecks",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/healthchecks/config</p>",
      "description": "[Healthchecks](https://github.com/healthchecks/healthchecks) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
      "image": "linuxserver/healthchecks:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "SITE_ROOT",
          "label": "SITE_ROOT",
          "default": "<SITE_ROOT>",
          "description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)"
        },
        {
          "name": "SITE_NAME",
          "label": "SITE_NAME",
          "default": "<SITE_NAME>",
          "description": "The site's name (e.g., 'Example Corp HealthChecks')"
        },
        {
          "name": "DEFAULT_FROM_EMAIL",
          "label": "DEFAULT_FROM_EMAIL",
          "default": "<DEFAULT_FROM_EMAIL>",
          "description": "From email for alerts"
        },
        {
          "name": "EMAIL_HOST",
          "label": "EMAIL_HOST",
          "default": "<EMAIL_HOST>",
          "description": "SMTP host"
        },
        {
          "name": "EMAIL_PORT",
          "label": "EMAIL_PORT",
          "default": "<EMAIL_PORT>",
          "description": "SMTP port"
        },
        {
          "name": "EMAIL_HOST_USER",
          "label": "EMAIL_HOST_USER",
          "default": "<EMAIL_HOST_USER>",
          "description": "SMTP user"
        },
        {
          "name": "EMAIL_HOST_PASSWORD",
          "label": "EMAIL_HOST_PASSWORD",
          "default": "<EMAIL_HOST_PASSWORD>",
          "description": "SMTP password"
        },
        {
          "name": "EMAIL_USE_TLS",
          "label": "EMAIL_USE_TLS",
          "default": "<True or False>",
          "description": "Use TLS for SMTP (`True` or `False`)"
        },
        {
          "name": "SUPERUSER_EMAIL",
          "label": "SUPERUSER_EMAIL",
          "default": "<SUPERUSER_EMAIL>",
          "description": "Superuser email"
        },
        {
          "name": "SUPERUSER_PASSWORD",
          "label": "SUPERUSER_PASSWORD",
          "default": "<SUPERUSER_PASSWORD>",
          "description": "Superuser password"
        },
        {
          "name": "REGENERATE_SETTINGS",
          "label": "REGENERATE_SETTINGS",
          "default": "True/False",
          "description": "Defaults to False. Set to true to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file."
        },
        {
          "name": "SITE_LOGO_URL",
          "label": "SITE_LOGO_URL",
          "default": "<SITE_LOGO_URL>",
          "description": "Custom site logo URL"
        },
        {
          "name": "ALLOWED_HOSTS",
          "label": "ALLOWED_HOSTS",
          "default": "<ALLOWED_HOSTS>",
          "description": "array of valid hostnames for the server `['test.com','test2.com']` (default: `['*']`)"
        },
        {
          "name": "SECRET_KEY",
          "label": "SECRET_KEY",
          "default": "<SECRET_KEY>",
          "description": "A secret key used for cryptographic signing. docker-healthchecks will generate a secure value if one does not exist"
        },
        {
          "name": "APPRISE_ENABLED",
          "label": "APPRISE_ENABLED",
          "default": "True/False",
          "description": "Defaults to False. A boolean that turns on/off the Apprise integration (https://github.com/caronc/apprise)"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/healthchecks/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Hedgedoc",
      "name": "Hedgedoc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/hedgedoc/config</p>",
      "description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
      "categories": [
        "Documentation"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
      "image": "linuxserver/hedgedoc:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "<hostname or ip>",
          "description": "Host address of mysql database"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "3306",
          "description": "Port to access mysql database default is 3306"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "hedgedoc",
          "description": "Database user"
        },
        {
          "name": "DB_PASS",
          "label": "DB_PASS",
          "default": "<secret password>",
          "description": "Database password"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "hedgedoc",
          "description": "Database name"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "CMD_DOMAIN",
          "label": "CMD_DOMAIN",
          "default": "localhost",
          "description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`)."
        },
        {
          "name": "CMD_URL_ADDPORT",
          "label": "CMD_URL_ADDPORT",
          "default": "true",
          "description": "Set to `false` if accessing at port `80` or `443`."
        },
        {
          "name": "CMD_PROTOCOL_USESSL",
          "label": "CMD_PROTOCOL_USESSL",
          "default": "false",
          "description": "Set to `true` if accessing over https via reverse proxy."
        },
        {
          "name": "CMD_PORT",
          "label": "CMD_PORT",
          "default": "3000",
          "description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000)."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/hedgedoc/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/heimdall:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/heimdall-icon.png",
      "name": "heimdall",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Heimdall",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Heimdall",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
      "image": "b4bz/homer:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/homer.png",
      "name": "homer",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
      "platform": "linux",
      "ports": [
        "8902:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homer",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homer",
          "container": "/www/config.yml"
        }
      ]
    },
    {
      "type": 1,
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "categories": [
        "webserver"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Create agents that monitor and act on your behalf.",
      "image": "huginn/huginn:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/huginn.png",
      "name": "huginn",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Huginn",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/huginn",
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "InfluxDB is an open source time series database for recording metrics, events, and analytics. You will need to add /portainer/Files/AppData/Config/Influxdb/config/influxdb.conf",
      "hostname": "rpi-influxdb1810",
      "image": "influxdb:1.8.10",
      "logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
      "name": "influxdb1810",
      "platform": "linux",
      "ports": [
        "8086:8086/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Influxdb 1.8.10",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Influxdb/data",
          "container": "/var/lib/influxdb"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Influxdb/config",
          "container": "/var/lib/influxdb"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.influxdata.com/\" target=\"_blank\">https://www.influxdata.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker\" target=\"_blank\">https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker</a><br><br><br>"
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
      "env": [
        {
          "default": "invoice.my.domain",
          "label": "URL",
          "name": "URL"
        },
        {
          "label": "APP_KEY",
          "name": "APP_KEY"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/invoice_ninja.png",
      "name": "invoice_ninja",
      "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation here. ",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/invoice-ninja.yml",
        "url": "https://github.com/SelfhostedPro/selfhosted_templates"
      },
      "title": "Invoice Ninja",
      "type": 3
    },
    {
      "type": 1,
      "title": "Ipfs",
      "name": "Ipfs",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ipfs/config</p>",
      "description": "[Ipfs](https://ipfs.io/) - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
      "categories": [
        "P2P"
      ],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png",
      "image": "linuxserver/ipfs:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp",
        "4001:4001/tcp",
        "5001:5001/tcp",
        "8080:8080/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/ipfs/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 2,
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "note": "Deploys the IronFunctions API and UI.",
      "categories": [
        "serverless"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/ironfunctions/docker-stack.yml"
      }
    },
    {
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/jackett:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jacket-icon.png",
      "name": "jackett",
      "platform": "linux",
      "ports": [
        "9117:9117/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jackett",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jackett",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/jellyfin:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jellyfin.png",
      "name": "jellyfin",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jellyfin",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jelllyfin",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": [
        "continuous-integration"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": [
        "8080/tcp",
        "50000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins-builder",
      "name": "Jenkins-builder",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jenkins-builder/config</p>",
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/jenkins-builder:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/jenkins-builder/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jupyter Notebook",
      "name": "jupyter",
      "description": "Jupyter scipy notebook, containing Numpy and Pandas for data science / data analsis purposes.",
      "image": "jupyter/scipy-notebook",
      "categories": [
        "Data Science"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "10000:8888/tcp"
      ],
      "volumes": [
        {
          "container": "/home/jovyan/"
        }
      ],
      "env": [
        {
          "name": "NB_UID",
          "label": "NB_UID",
          "default": "1000"
        },
        {
          "name": "NB_GID",
          "label": "NB_GID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Kanzi",
      "name": "Kanzi",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kanzi/config</p>",
      "description": "[Kanzi](https://lexigr.am/), formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
      "image": "linuxserver/kanzi:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "INVOCATION_NAME",
          "label": "INVOCATION_NAME",
          "default": "kanzi",
          "description": "Specify an invocation name for this skill, use either kanzi or kod."
        },
        {
          "name": "URL_ENDPOINT",
          "label": "URL_ENDPOINT",
          "default": "https://server.com/kanzi/",
          "description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included."
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/kanzi/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Kdenlive",
      "name": "Kdenlive",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kdenlive/config</p>",
      "description": "[Kdenlive](https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
      "image": "linuxserver/kdenlive:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        },
        {
          "name": "KEYBOARD",
          "label": "KEYBOARD",
          "default": "en-us-qwerty",
          "description": "See the keyboard layouts section for more information and options."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/kdenlive/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Video"
      ],
      "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/kodi-headless:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/kodi-icon.png",
      "name": "kodi-headless",
      "platform": "linux",
      "ports": [
        "8080/tcp",
        "9777/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Kodi Headless",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Kodi",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Books",
        "Tools"
      ],
      "description": "Komga is a free and open source comics/mangas/magazines server.",
      "image": "gotson/komga",
      "logo": "https://raw.githubusercontent.com/tuta23/pi-hosted/master/images/komga.png",
      "name": "komga",
      "platform": "linux",
      "ports": [
        "8995:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Komga",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/komga/config",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/komga/data",
          "container": "/data"
        },
        {
          "bind": "/etc/timezone",
          "container": "/etc/timezone",
          "read_only": "true"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/gotson/komga\" target=\"_blank\">https://github.com/gotson/komga</a><br><b>Official Docker Documentation: </b><a href=\"https://komga.org/\" target=\"_blank\">https://komga.org/</a><br><br><br>"
    },
    {
      "categories": [
        "Books"
      ],
      "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/lazylibrarian:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lazylibrarian-icon.png",
      "name": "lazylibrarian",
      "platform": "linux",
      "ports": [
        "5299:5299/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "LazyLibrarian",
      "type": 1,
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/downloads"
        },
        {
          "container": "/books"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ldap-auth",
      "name": "Ldap-auth",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
      "platform": "linux",
      "logo": "https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg",
      "image": "linuxserver/ldap-auth:latest",
      "env": [
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "FERNETKEY",
          "label": "FERNETKEY",
          "default": "",
          "description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)"
        },
        {
          "name": "CERTFILE",
          "label": "CERTFILE",
          "default": "",
          "description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon"
        },
        {
          "name": "KEYFILE",
          "label": "KEYFILE",
          "default": "",
          "description": "Point this to the private key file, matching the certificate file referred to in CERTFILE"
        }
      ],
      "ports": [
        "8888:8888/tcp",
        "9000:9000/tcp"
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Tools",
        "Web"
      ],
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd <username>",
      "env": [
        {
          "label": "EMAIL",
          "name": "EMAIL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "URL",
          "name": "URL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS",
          "set": "www,"
        },
        {
          "label": "ONLY_SUBDOMAINS",
          "name": "ONLY_SUBDOMAINS",
          "set": "false"
        },
        {
          "label": "DHLEVEL",
          "name": "DHLEVEL",
          "set": "2048"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "VALIDATION",
          "name": "VALIDATION",
          "set": "http"
        },
        {
          "label": "DNSPLUGIN",
          "name": "DNSPLUGIN",
          "set": "http"
        }
      ],
      "image": "lscr.io/linuxserver/letsencrypt:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/letsencrypt.png",
      "name": "letsencrypt",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Let's Encrypt",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A Free and Open Source Speedtest for HTML5 and more.",
      "image": "lscr.io/linuxserver/librespeed:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/speedtest.png",
      "name": "librespeed",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "LibreSpeed",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/LibreSpeed",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Libreoffice",
      "name": "Libreoffice",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/libreoffice/config</p>",
      "description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
      "image": "linuxserver/libreoffice:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/libreoffice/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Limnoria",
      "name": "Limnoria",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/limnoria/config</p>",
      "description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
      "image": "linuxserver/limnoria:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/limnoria/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Cloud",
        "Web",
        "Management",
        "Photos"
      ],
      "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/lychee:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lychee-icon.png",
      "name": "lychee",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Lychee",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Lychee",
          "container": "/config"
        },
        {
          "bind": "/portainer/Pictures",
          "container": "/pictures"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Web",
        "Management",
        "Photos"
      ],
      "description": "Lychee With Mariadb is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "lychee",
          "label": "DATABASE_NAME",
          "name": "DATABASE_NAME"
        },
        {
          "default": "lychee",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lychee-icon.png",
      "name": "lychee-mariadb",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/lychee-mariadb.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Lychee With Mariadb",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://lycheeorg.github.io/\" target=\"_blank\">https://lycheeorg.github.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-lychee\" target=\"_blank\">https://docs.linuxserver.io/images/docker-lychee</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Magento 2",
      "description": "Open-source e-commerce platform",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
      "image": "alankent/gsd:latest",
      "ports": [
        "80/tcp",
        "3000/tcp",
        "3001/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html/"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "An Enhanced drop in replacement for Mysql",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD",
          "set": ""
        }
      ],
      "image": "lscr.io/linuxserver/mariadb:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mariadb-icon.png",
      "name": "mariadb",
      "platform": "linux",
      "ports": [
        "3306:3306/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "MariaDB",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mariadb",
          "container": "/config"
        }
      ]
    },
    {
      "type": 3,
      "title": "MariaDB Backups",
      "name": "mariadb_backup",
      "description": "Periodically backup a MariaDB/MySQL database",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/periodic-mariadb-backup.yml"
      },
      "env": [
        {
          "name": "CONTAINER_NAME",
          "label": "Backup Container Name",
          "default": "MariaDB Backup"
        },
        {
          "name": "MYSQL_CONTAINER",
          "label": "MySQL Container Name",
          "description": "Enter the Docker container name for the database to backup."
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "MySQL Database Name",
          "description": "Enter the name of the database to backup."
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MySQL Root Password",
          "description": "enter the root password of the MySQL database."
        },
        {
          "name": "BACKUP_VOLUME",
          "label": "Backup Location",
          "default": "/portainer/AppData/APPNAME/DB_Backup"
        },
        {
          "name": "NETWORK",
          "label": "Network Name",
          "default": "bridge"
        }
      ]
    },
    {
      "type": 3,
      "title": "Matomo",
      "name": "matomo",
      "description": "Analytics tool",
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "platform": "linux",
      "repository": {
        "url": "https://github.com/andyyanguk/portainer_templates",
        "stackfile": "stacks/matomo.yml"
      },
      "env": [
        {
          "name": "DB_VOLUME",
          "label": "DB Volume",
          "default": "/portainer/AppData/Matomo/DB"
        },
        {
          "name": "MATOMO_VOLUME",
          "label": "Matomo Volume",
          "default": "/portainer/AppData/Matomo/App"
        },
        {
          "name": "PORT",
          "label": "Port",
          "default": "8088"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MySQL Root Pass"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "MySQL Pass"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": [
        "marketing"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/mcmyadmin2:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mcmyadmin-icon.png",
      "name": "mcmyadmin2",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "25565:25565/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "McMyAdmin 2",
      "type": 1,
      "volumes": [
        {
          "container": "/minecraft"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/medusa:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/medusa-icon.png",
      "name": "medusa",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Medusa",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Medusa",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "type": 2,
      "title": "Microsoft OMS Agent",
      "description": "Microsoft Operations Management Suite Linux agent.",
      "categories": [
        "OPS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/microsoft-oms/docker-stack.yml"
      },
      "env": [
        {
          "name": "AZURE_WORKSPACE_ID",
          "label": "Workspace ID",
          "description": "Azure Workspace ID"
        },
        {
          "name": "AZURE_PRIMARY_KEY",
          "label": "Primary key",
          "description": "Azure primary key"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Server version of minetest, a free, open source alternative to minecraft.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/minetest:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
      "name": "minetest",
      "platform": "linux",
      "ports": [
        "30000:30000/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Minetest",
      "type": 1,
      "volumes": [
        {
          "container": "/config/.minetest"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": [
        "storage"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "ports": [
        "9000/tcp",
        "9001/tcp"
      ],
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data --console-address ':9001'"
    },
    {
      "categories": [
        "Video",
        "Other",
        "Tools"
      ],
      "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.\n  ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/minisatip:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/minisatip-icon.png",
      "name": "minisatip",
      "platform": "linux",
      "ports": [
        "8875:8875/tcp",
        "554:554/tcp",
        "1900:1900/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Minisatip",
      "type": 1
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": [
        "27017/tcp"
      ],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Music"
      ],
      "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone..",
      "image": "lscr.io/linuxserver/mstream:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mstream.png",
      "name": "mstream",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mstream",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mstream",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/music"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Voice",
        "Chat"
      ],
      "description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "goofball222/murmur:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/Mumble-logo.png",
      "name": "murmur",
      "platform": "linux",
      "ports": [
        "64738:64738/tcp",
        "64738:64738/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Murmur",
      "type": 1,
      "volumes": [
        {
          "bind": "/etc/localtime:ro",
          "container": "/etc/localtime"
        },
        {
          "bind": "/portainer/Files/Config/Murmur",
          "container": "/opt/murmur/config"
        },
        {
          "bind": "/portainer/Files/Murmur/data",
          "container": "/opt/murmur/data"
        },
        {
          "bind": "/portainer/Files/Murmur/log",
          "container": "/opt/murmur/log"
        }
      ]
    },
    {
      "categories": [
        "Music",
        "Other",
        "Tools"
      ],
      "description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
      "env": [
        {
          "label": "BRAINZCODE",
          "name": "BRAINZCODE",
          "set": ""
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/musicbrainz:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/musicbrainz-icon.png",
      "name": "musicbrainz",
      "platform": "linux",
      "ports": [
        "5000:5000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "MusicBrainz",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/MusicBrainz",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/MusicBrainz",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Web",
        "Proxy",
        "Other",
        "Tools"
      ],
      "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/muximux:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/muximux-icon.png",
      "name": "muximux",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Muximux",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Muximux",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": [
        "3306/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Books"
      ],
      "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/mylar:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mylar-icon.png",
      "name": "mylar",
      "platform": "linux",
      "ports": [
        "8090:8090/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mylar",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mylar",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Comics",
          "container": "/comics"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mylar3",
      "name": "Mylar3",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mylar3/config<br>mkdir -p /volume1/docker/mylar3/comics<br>mkdir -p /volume1/docker/mylar3/downloads</p>",
      "description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
      "image": "linuxserver/mylar3:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        }
      ],
      "ports": [
        "8090:8090/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/mylar3/config"
        },
        {
          "container": "/comics",
          "bind": "/volume1/docker/mylar3/comics"
        },
        {
          "container": "/downloads",
          "bind": "/volume1/docker/mylar3/downloads"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Mysql-workbench",
      "name": "Mysql-workbench",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mysql-workbench/config</p>",
      "description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
      "image": "linuxserver/mysql-workbench:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/mysql-workbench/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/nzbget:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nzbget-icon.png",
      "name": "nzbget",
      "platform": "linux",
      "ports": [
        "6789:6789/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "NZBGet",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nzbget",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Other",
        "Tools"
      ],
      "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/nzbhydra2:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/hydra-icon.png",
      "name": "nzbhydra2",
      "platform": "linux",
      "ports": [
        "5076:5076/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "NZBHydra 2",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nzbhydra2",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "type": 1,
      "title": "Nano",
      "name": "Nano",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nano/config</p>",
      "description": "[Nano](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
      "image": "linuxserver/nano:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "PEER_HOST",
          "label": "PEER_HOST",
          "default": "localhost",
          "description": "Default peer host (can be overidden with an array by command line options)"
        },
        {
          "name": "LIVE_GENESIS_PUB",
          "label": "LIVE_GENESIS_PUB",
          "default": "GENESIS_PUBLIC",
          "description": "Genesis block public key"
        },
        {
          "name": "LIVE_GENESIS_ACCOUNT",
          "label": "LIVE_GENESIS_ACCOUNT",
          "default": "nano_xxxxxx",
          "description": "Genesis block account"
        },
        {
          "name": "LIVE_GENESIS_WORK",
          "label": "LIVE_GENESIS_WORK",
          "default": "WORK_FOR_BLOCK",
          "description": "Genesis block proof of work"
        },
        {
          "name": "LIVE_GENESIS_SIG",
          "label": "LIVE_GENESIS_SIG",
          "default": "BLOCK_SIGNATURE",
          "description": "Genesis block signature"
        },
        {
          "name": "CLI_OPTIONS",
          "label": "CLI_OPTIONS",
          "default": "--config node.enable_voting=true",
          "description": "Node run command cli args"
        },
        {
          "name": "LMDB_BOOTSTRAP_URL",
          "label": "LMDB_BOOTSTRAP_URL",
          "default": "http://example.com/Nano_64_version_20.7z",
          "description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node"
        }
      ],
      "ports": [
        "8075:8075/tcp",
        "7076:3000/tcp",
        "7077:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/nano/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Nano-wallet",
      "name": "Nano-wallet",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "description": "[Nano-wallet](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions. This container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.",
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
      "image": "linuxserver/nano-wallet:latest",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Netbootxyz",
      "name": "Netbootxyz",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
      "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
      "platform": "linux",
      "logo": "https://netboot.xyz/images/netboot.xyz.gif",
      "image": "linuxserver/netbootxyz:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "MENU_VERSION",
          "label": "MENU_VERSION",
          "default": "1.9.9",
          "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
        },
        {
          "name": "PORT_RANGE",
          "label": "PORT_RANGE",
          "default": "30000:30010",
          "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "69:69/udp",
        "8080:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/netbootxyz/config"
        },
        {
          "container": "/assets",
          "bind": "/volume1/docker/netbootxyz/assets"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Netbox",
      "name": "Netbox",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbox/config</p>",
      "description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
      "image": "linuxserver/netbox:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUPERUSER_EMAIL",
          "label": "SUPERUSER_EMAIL",
          "default": "<SUPERUSER_EMAIL>",
          "description": "Email address for `admin` account"
        },
        {
          "name": "SUPERUSER_PASSWORD",
          "label": "SUPERUSER_PASSWORD",
          "default": "<SUPERUSER_PASSWORD>",
          "description": "Password for `admin` account"
        },
        {
          "name": "ALLOWED_HOST",
          "label": "ALLOWED_HOST",
          "default": "<ALLOWED_HOST>",
          "description": "The hostname you will use to access the app (i.e., netbox.example.com)"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "<DB_NAME>",
          "description": "Database name (default: netbox)"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "<DB_USER>",
          "description": "Database user"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "<DB_PASSWORD>",
          "description": "Database password"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "<DB_HOST>",
          "description": "Database host (default: postgres)"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "<DB_PORT>",
          "description": "Database port (defaul: 5432)"
        },
        {
          "name": "REDIS_HOST",
          "label": "REDIS_HOST",
          "default": "<REDIS_HOST>",
          "description": "Redis host (default: redis)"
        },
        {
          "name": "REDIS_PORT",
          "label": "REDIS_PORT",
          "default": "<REDIS_PORT>",
          "description": "Redis port number (default: 6379)"
        },
        {
          "name": "REDIS_PASSWORD",
          "label": "REDIS_PASSWORD",
          "default": "<REDIS_PASSWORD>",
          "description": "Redis password (default: none)"
        },
        {
          "name": "REDIS_DB_TASK",
          "label": "REDIS_DB_TASK",
          "default": "<REDIS_DB_TASK>",
          "description": "Redis database ID for tasks (default: 0)"
        },
        {
          "name": "REDIS_DB_CACHE",
          "label": "REDIS_DB_CACHE",
          "default": "<REDIS_DB_CACHE>",
          "description": "Redis database ID for caching (default: 1)"
        },
        {
          "name": "BASE_PATH",
          "label": "BASE_PATH",
          "default": "<BASE_PATH>",
          "description": "The path you will use to access the app (i.e., /netbox, optional, default: none)"
        },
        {
          "name": "REMOTE_AUTH_ENABLED",
          "label": "REMOTE_AUTH_ENABLED",
          "default": "<REMOTE_AUTH_ENABLED>",
          "description": "Enable remote authentication (optional, default: False)"
        },
        {
          "name": "REMOTE_AUTH_BACKEND",
          "label": "REMOTE_AUTH_BACKEND",
          "default": "<REMOTE_AUTH_BACKEND>",
          "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)"
        },
        {
          "name": "REMOTE_AUTH_HEADER",
          "label": "REMOTE_AUTH_HEADER",
          "default": "<REMOTE_AUTH_HEADER>",
          "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)"
        },
        {
          "name": "REMOTE_AUTH_AUTO_CREATE_USER",
          "label": "REMOTE_AUTH_AUTO_CREATE_USER",
          "default": "<REMOTE_AUTH_AUTO_CREATE_USER>",
          "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)"
        },
        {
          "name": "REMOTE_AUTH_DEFAULT_GROUPS",
          "label": "REMOTE_AUTH_DEFAULT_GROUPS",
          "default": "<REMOTE_AUTH_DEFAULT_GROUPS>",
          "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])"
        },
        {
          "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
          "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
          "default": "<REMOTE_AUTH_DEFAULT_PERMISSIONS>",
          "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/netbox/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
      "env": [
        {
          "default": "1000",
          "label": "DOCKER_USR",
          "name": "DOCKER_USR"
        },
        {
          "default": "1000",
          "label": "DOCKER_GRP",
          "name": "DOCKER_GRP"
        }
      ],
      "image": "netdata/netdata:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/netdata.png",
      "name": "netdata",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.netdata.cloud/\" target=\"_blank\">https://www.netdata.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://learn.netdata.cloud/docs/agent/packaging/docker\" target=\"_blank\">https://learn.netdata.cloud/docs/agent/packaging/docker</a><br><br><br>Documentation is Available <a href='https://learn.netdata.cloud/'>here</a>.",
      "platform": "linux",
      "ports": [
        "19999:19999/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Netdata",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/netdata/netdataconfig",
          "container": "/etc/netdata"
        },
        {
          "bind": "/portainer/Files/AppData/Config/netdata/netdatalib",
          "container": "/var/lib/netdata"
        },
        {
          "bind": "/etc/passwd",
          "container": "/host/etc/passwd:ro"
        },
        {
          "bind": "/etc/group",
          "container": "/host/etc/group:ro"
        },
        {
          "bind": "/proc",
          "container": "/host/proc:ro"
        },
        {
          "bind": "/sys",
          "container": "/host/sys:ro"
        },
        {
          "bind": "/etc/os-release",
          "container": "/host/etc/os-release:ro"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nextcloud-icon.png",
      "name": "nextcloud",
      "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/nextcloud.yml",
        "url": "https://github.com/SelfhostedPro/selfhosted_templates"
      },
      "title": "Nextcloud",
      "type": 3
    },
    {
      "categories": [
        "Web",
        "Proxy"
      ],
      "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/nginx:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nginx-icon.png",
      "name": "nginx",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nginx",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Proxy",
        "Tools"
      ],
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
      "image": "jlesage/nginx-proxy-manager",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/proxy_mgr.png",
      "name": "nginx-proxy-manager",
      "platform": "linux",
      "ports": [
        "80:8080/tcp",
        "81:8181/tcp",
        "443:4443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx Proxy Manager",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nginx-Proxy",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Proxy",
        "Tools"
      ],
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "password",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "password",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "default": "false",
          "label": "SKIP_ARCHIVED_LOGS",
          "name": "SKIP_ARCHIVED_LOGS",
          "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
        },
        {
          "default": "false",
          "label": "BASIC_AUTH",
          "name": "BASIC_AUTH",
          "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
        },
        {
          "default": "user",
          "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
          "name": "BASIC_AUTH_USERNAME",
          "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
        },
        {
          "default": "Password",
          "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
          "name": "BASIC_AUTH_PASSWORD",
          "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
      "name": "nginx-proxy-manager-goaccess",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "81:81/tcp",
        "443:443/tcp",
        "7880:7880/tcp"
      ],
      "repository": {
        "stackfile": "stack/nginx-proxy-manager-goaccess.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "restart_policy": "unless-stopped",
      "title": "Nginx Proxy Manager with Goaccess Charts",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#using-mysql-mariadb-database\" target=\"_blank\">https://nginxproxymanager.com/setup/#using-mysql-mariadb-database</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a><br><br><b>Pre-installation script must be RAN before you install: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/nginx-proxy-manager.sh\" target=\"_blank\">nginx-proxy-manager.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10\" target=\"_blank\">Installing Nginx Proxy Manager on Docker</a><br><br>"
    },
    {
      "type": 1,
      "title": "Ngircd",
      "name": "Ngircd",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ngircd/config</p>",
      "description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
      "image": "linuxserver/ngircd:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "6667:6667/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/ngircd/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Nntp2nntp",
      "name": "Nntp2nntp",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nntp2nntp/config</p>",
      "description": "[Nntp2nntp](https://github.com/linuxserver/nntp2nntp) proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast. ## Warning Whilst we know of no nntp2nntp security issues the [upstream code](https://github.com/linuxserver/nntp2nntp) for this project has received no changes since 06.08.15 and is likely abandoned permanently. For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement. We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
      "image": "linuxserver/nntp2nntp:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "<yourUID>",
          "description": "specify your UID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "<yourGID>",
          "description": "specify your GID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "1563:1563/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/nntp2nntp/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Web",
        "Tools"
      ],
      "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
      "env": [
        {
          "default": "your_secret_goes_here",
          "label": "NODE_RED_CREDENTIAL_SECRET",
          "name": "NODE_RED_CREDENTIAL_SECRET"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/node-red.png",
      "name": "node-red",
      "platform": "linux",
      "ports": [
        "1880:1880/tcp"
      ],
      "repository": {
        "stackfile": "stack/node-red.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Node Red",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nodered.org/\" target=\"_blank\">https://nodered.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://nodered.org/docs/getting-started/docker\" target=\"_blank\">https://nodered.org/docs/getting-started/docker</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "categories": [
        "development"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "categories": [
        "Other"
      ],
      "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/oscam:latest",
      "logo": "http://i.imgur.com/8LadrLg.png",
      "name": "oscam",
      "platform": "linux",
      "ports": [
        "8888:8888/tcp",
        "10000:10000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "OScam",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OScam",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Management",
        "Tools"
      ],
      "description": "TP-Link Omada is a software-defined network solution. The EAP Controller is used to manage multiple EAPs. Raspberry Pi 1 and Zero are not supported.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "mbentley/omada-controller:latest-armv7l",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/omada.png",
      "name": "omada-controller",
      "platform": "linux",
      "ports": [
        "8088:8088/tcp",
        "8043:8043/tcp",
        "27001:27001/udp",
        "27002:27002/tcp",
        "29810:29810/udp",
        "29811:29811/tcp",
        "29812:29812/tcp",
        "29813:29813/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Omada EAP Controller",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Omada",
          "container": "/config"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.tp-link.com/us/business-networking/omada-sdn-controller/\" target=\"_blank\">https://www.tp-link.com/us/business-networking/omada-sdn-controller/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mbentley/omada-controller\" target=\"_blank\">https://hub.docker.com/r/mbentley/omada-controller</a><br><br><br>"
    },
    {
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "description": "Ombi allows you to host your own Plex Request and user management system. ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/ombi:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ombi.png",
      "name": "ombi",
      "platform": "linux",
      "ports": [
        "3579:3579/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ombi",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Ombi",
          "container": "/config"
        }
      ]
    },
    {
      "type": 3,
      "title": "OpenAMT",
      "description": "OpenAMT Cloud Toolkit",
      "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
      "categories": [
        "Cloud"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/openamt/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Database user"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Database password"
        },
        {
          "name": "MPS_USER",
          "label": "MPS user"
        },
        {
          "name": "MPS_PASSWORD",
          "label": "MPS password"
        },
        {
          "name": "MPS_COMMON_NAME",
          "label": "MPS URL",
          "description": "Used to connect to the MPS API."
        },
        {
          "name": "MPS_SECRET",
          "label": "MPS Secret",
          "description": "Strong secret key used to log into MPS."
        },
        {
          "name": "VAULT_SECRET",
          "label": "Vault secret",
          "description": "Secret token used to log into Vault (don't include '.' character)."
        }
      ]
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": [
        "serverless"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "categories": [
        "Other"
      ],
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "env": [
        {
          "label": "INTERFACE",
          "name": "INTERFACE",
          "set": "eth0"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/openvpn-as:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/openvpn-as-icon.png",
      "name": "openvpn-as",
      "platform": "linux",
      "ports": [
        "943:943/tcp",
        "9443:9443/tcp",
        "1194:1194/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "OpenVPN Access Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Openvscode-server",
      "name": "Openvscode-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openvscode-server/config</p>",
      "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
      "image": "linuxserver/openvscode-server:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "CONNECTION_TOKEN",
          "label": "CONNECTION_TOKEN",
          "default": "",
          "description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`)."
        },
        {
          "name": "CONNECTION_SECRET",
          "label": "CONNECTION_SECRET",
          "default": "",
          "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`."
        },
        {
          "name": "SUDO_PASSWORD",
          "label": "SUDO_PASSWORD",
          "default": "password",
          "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password."
        },
        {
          "name": "SUDO_PASSWORD_HASH",
          "label": "SUDO_PASSWORD_HASH",
          "default": "",
          "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/openvscode-server/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "organizrtools/organizr-v2:php-fpm",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
      "name": "organizr-v2",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Organizr v2",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Organizr",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Management",
        "Productivity"
      ],
      "description": "Paperless is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents. https://github.com/jonaswinkler/paperless-ng",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/paperless-ng",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/paperless.png",
      "name": "paperless",
      "platform": "linux",
      "ports": [
        "8005:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Paperless",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/paperless/config",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/paperless/data",
          "container": "/data"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/jonaswinkler/paperless-ng\" target=\"_blank\">https://github.com/jonaswinkler/paperless-ng</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-paperless-ng\" target=\"_blank\">https://docs.linuxserver.io/images/docker-paperless-ng</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Paperless-ngx",
      "name": "Paperless-ngx",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/paperless-ngx/config<br>mkdir -p /volume1/docker/paperless-ngx/data</p>",
      "description": "[Paperless-ngx](https://github.com/paperless-ngx/paperless-ngx) is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.'",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/paperless-ngx:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "REDIS_URL",
          "label": "REDIS_URL",
          "default": "",
          "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/paperless-ngx/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/paperless-ngx/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Papermerge",
      "name": "Papermerge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/papermerge/config<br>mkdir -p /volume1/docker/papermerge/data</p>",
      "description": "[Papermerge](https://www.papermerge.com/) is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.'",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
      "image": "linuxserver/papermerge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "REDIS_URL",
          "label": "REDIS_URL",
          "default": "",
          "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/papermerge/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/papermerge/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Peppermint",
      "name": "Peppermint",
      "description": "Peppermint is a free and open source tickeg management solution with a range of features",
      "logo": "https://raw.githubusercontent.com/Peppermint-Lab/peppermint/master/public/logo.svg",
      "image": "pepperlabs/peppermint:latest",
      "categories": [
        "Other",
        "Tools",
        "Management"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "5001:5001/tcp"
      ],
      "volumes": [
        {
          "container": "/data",
          "bind": "/srv/dev-disk-by-label-media/Files/AppData/Config/peppermint"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "5001"
        },
        {
          "name": "DB_USERNAME",
          "label": "DB_USERNAME",
          "default": "peppermint"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "1234"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "postgres"
        }
      ]
    },
    {
      "categories": [
        "Photos"
      ],
      "description": "A simple, easy way to turn a photo album into a webgallery",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/photoshow:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/photoshow-icon.png",
      "name": "photoshow",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "PhotoShow",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Pictures",
          "container": "/Pictures"
        },
        {
          "bind": "/portainer/Files/AppData/Photoshow/Thumbs",
          "container": "/Thumbs"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PhotoShow",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "image": "pihole/pihole:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pihole.png",
      "name": "pihole",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article here if you run into issues binding to port 53.",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pidgin",
      "name": "Pidgin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pidgin/config</p>",
      "description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
      "image": "linuxserver/pidgin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pidgin/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Photos"
      ],
      "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/piwigo:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/piwigo-icon.png",
      "name": "piwigo",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Piwigo",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiWigo",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pixapop",
      "name": "Pixapop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pixapop/config<br>mkdir -p /volume1/docker/pixapop/photos</p>",
      "description": "[Pixapop](https://github.com/bierdok/pixapop) is an open-source single page application to view your photos in the easiest way possible.",
      "categories": [
        "Productivity"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pixapop.png",
      "image": "linuxserver/pixapop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "APP_USERNAME",
          "label": "APP_USERNAME",
          "default": "admin",
          "description": "Specify a username to enable authentication."
        },
        {
          "name": "APP_PASSWORD",
          "label": "APP_PASSWORD",
          "default": "admin",
          "description": "Specify a password to enable authentication."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pixapop/config"
        },
        {
          "container": "/photos",
          "bind": "/volume1/docker/pixapop/photos"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Plesk",
      "description": "WebOps platform and hosting control panel",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "note": "Default credentials: admin / changeme",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
      "image": "plesk/plesk:latest",
      "ports": [
        "21/tcp",
        "80/tcp",
        "443/tcp",
        "8880/tcp",
        "8443/tcp",
        "8447/tcp"
      ]
    },
    {
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "VERSION",
          "name": "VERSION",
          "set": "latest"
        }
      ],
      "image": "lscr.io/linuxserver/plex:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/plex-icon.png",
      "name": "plex",
      "network": "host",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Plex",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Plex",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "description": "Simple automated way for users to request new content for Plex.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "URL_BASE",
          "name": "URL_BASE",
          "set": ""
        }
      ],
      "image": "lscr.io/linuxserver/plexrequests:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
      "name": "plexrequests",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Plex Requests",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PlexRequests",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plex-meta-manager",
      "name": "Plex-meta-manager",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex-meta-manager/config</p>",
      "description": "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
      "categories": [
        "Media Management"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
      "image": "linuxserver/plex-meta-manager:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "PMM_CONFIG",
          "label": "PMM_CONFIG",
          "default": "/config/config.yml",
          "description": "Specify a custom config file to use."
        },
        {
          "name": "PMM_TIME",
          "label": "PMM_TIME",
          "default": "03:00",
          "description": "Comma-separated list of times to update each day. Format: `HH:MM`."
        },
        {
          "name": "PMM_RUN",
          "label": "PMM_RUN",
          "default": "False",
          "description": "Set to `True` to run without the scheduler."
        },
        {
          "name": "PMM_TEST",
          "label": "PMM_TEST",
          "default": "False",
          "description": "Set to `True` to run in debug mode with only collections that have `test: true`."
        },
        {
          "name": "PMM_NO_MISSING",
          "label": "PMM_NO_MISSING",
          "default": "False",
          "description": "Set to `True` to run without any of the missing movie/show functions."
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/plex-meta-manager/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "note": "Default user and password are admin/admin",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 2,
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "categories": [
        "portainer"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/portainer-agent/docker-stack.yml"
      }
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": [
        "5432/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "categories": [
        "VPN",
        "Tools",
        "Other",
        "Web"
      ],
      "description": "Pritunl container built on Alpine Linux. Supports IPv6 and running behind a reverse proxy. This container requires an external Mongo DB and should be run via Docker Compose or other orchestration.",
      "env": [
        {
          "default": "false",
          "label": "REVERSE_PROXY",
          "name": "REVERSE_PROXY"
        },
        {
          "label": "PRITUNL_OPTS",
          "name": "PRITUNL_OPTS"
        },
        {
          "default": "mongodb://mongo:27017/pritunl",
          "label": "MONGODB_URI",
          "name": "MONGODB_URI"
        },
        {
          "default": "false",
          "label": "WIREGUARD",
          "name": "WIREGUARD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
      "name": "pritunl",
      "note": "Documentation on this containier can be found here: https://hub.docker.com/r/goofball222/pritunl",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/pritunl.yml",
        "url": "https://github.com/SelfhostedPro/selfhosted_templates"
      },
      "title": "Pritunl",
      "type": 3
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Web"
      ],
      "description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!\n  ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "privatebin/nginx-fpm-alpine:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/privatebin.png",
      "name": "privatebin",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "title": "PrivateBin",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/PrivateBin",
          "container": "/srv/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PrivateBin",
          "container": "/srv/cfg"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://privatebin.info/\" target=\"_blank\">https://privatebin.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\" target=\"_blank\">https://hub.docker.com/r/privatebin/nginx-fpm-alpine</a><br><br><br>"
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/projectsend:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/projectsend-logo.png",
      "name": "projectsend",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ProjectSend",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ProjectSend",
          "container": "/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/ProjectSend",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Email",
        "Productivity",
        "Tools",
        "Other"
      ],
      "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
      "image": "shenxn/protonmail-bridge:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/protonmail-bridge.png",
      "name": "protonmail-bridge",
      "note": "Please refer to the documentation here to set this up.",
      "platform": "linux",
      "ports": [
        "143/tcp",
        "25/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ProtonMail Bridge",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
          "container": "/root"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pwndrop",
      "name": "Pwndrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pwndrop/config</p>",
      "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
      "image": "linuxserver/pwndrop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SECRET_PATH",
          "label": "SECRET_PATH",
          "default": "/pwndrop",
          "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pwndrop/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Cloud",
        "Other"
      ],
      "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/pydio:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pydio-icon.png",
      "name": "pydio",
      "platform": "linux",
      "ports": [
        "443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pydio",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Pydio",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Pydio",
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pydio-cells",
      "name": "Pydio-cells",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pydio-cells/config</p>",
      "description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
      "image": "linuxserver/pydio-cells:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "EXTERNALURL",
          "label": "EXTERNALURL",
          "default": "yourdomain.url",
          "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."
        },
        {
          "name": "SERVER_IP",
          "label": "SERVER_IP",
          "default": "0.0.0.0",
          "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy)."
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "33060:33060/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pydio-cells/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Pyload-ng",
      "name": "Pyload-ng",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pyload-ng/config<br>mkdir -p /volume1/docker/pyload-ng/downloads</p>",
      "description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
      "platform": "linux",
      "logo": "https://pyload.net/img/banner.png",
      "image": "linuxserver/pyload-ng:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8000:8000/tcp",
        "9666:9666/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pyload-ng/config"
        },
        {
          "container": "/downloads",
          "bind": "/volume1/docker/pyload-ng/downloads"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Pylon",
      "name": "Pylon",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
      "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
      "image": "linuxserver/pylon:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "GITURL",
          "label": "GITURL",
          "default": "https://github.com/linuxserver/docker-pylon.git",
          "description": "Specify a git repo to checkout on first startup"
        },
        {
          "name": "PYUSER",
          "label": "PYUSER",
          "default": "myuser",
          "description": "Specify a basic auth user."
        },
        {
          "name": "PYPASS",
          "label": "PYPASS",
          "default": "mypass",
          "description": "Specify a basic auth password."
        }
      ],
      "ports": [
        "3131:3131/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/pylon/config"
        },
        {
          "container": "/code",
          "bind": "/volume1/docker/pylon/code"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Qdirstat",
      "name": "Qdirstat",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qdirstat/config<br>mkdir -p /volume1/docker/qdirstat/data</p>",
      "description": "[QDirStat](https://github.com/shundhammer/qdirstat) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
      "image": "linuxserver/qdirstat:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/qdirstat/config"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/qdirstat/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Messenger"
      ],
      "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/quassel-core:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/quassel-core-icon.png",
      "name": "quassel-core",
      "platform": "linux",
      "ports": [
        "4242:4242/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Quassel IRC",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Quassel-core",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Quassel-core",
      "name": "Quassel-core",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-core/config</p>",
      "description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
      "platform": "linux",
      "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
      "image": "linuxserver/quassel-core:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "RUN_OPTS",
          "label": "RUN_OPTS",
          "default": "--config-from-environment",
          "description": "Custom CLI options for Quassel"
        }
      ],
      "ports": [
        "4242:4242/tcp",
        "113:10113/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/quassel-core/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Quassel-web",
      "name": "Quassel-web",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-web/config</p>",
      "description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
      "image": "linuxserver/quassel-web:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "QUASSEL_CORE",
          "label": "QUASSEL_CORE",
          "default": "192.168.1.10",
          "description": "specify the URL or IP address of your Quassel Core instance"
        },
        {
          "name": "QUASSEL_PORT",
          "label": "QUASSEL_PORT",
          "default": "4242",
          "description": "specify the port of your Quassel Core instance"
        },
        {
          "name": "URL_BASE",
          "label": "URL_BASE",
          "default": "/quassel",
          "description": "Specify a url-base in reverse proxy setups ie. `/quassel`"
        }
      ],
      "ports": [
        "64443:64443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/quassel-web/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Rdesktop is an Ubuntu based container containing full desktop environments in officially supported flavors accessible via RDP.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/rdesktop:latest",
      "logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/rdesktop.png",
      "name": "rdesktop",
      "platform": "linux",
      "ports": [
        "3389:3389/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "RDesktop",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/RDesktop/config",
          "container": "/config"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"http://xrdp.org/\" target=\"_blank\">http://xrdp.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-rdesktop\" target=\"_blank\">https://docs.linuxserver.io/images/docker-rdesktop</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "categories": [
        "messaging"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": [
        "5671/tcp",
        "5672/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/radarr:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/radarr.png",
      "name": "radarr",
      "platform": "linux",
      "ports": [
        "7878:7878/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Radarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Radarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ]
    },
    {
      "type": 1,
      "title": "Raneto",
      "name": "Raneto",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/raneto/config</p>",
      "description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
      "image": "linuxserver/raneto:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/raneto/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
      "image": "amruthpillai/reactive-resume:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/reactiveresume.png",
      "name": "reactive-resume",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Reactive-Resume",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ReactiveResume",
          "container": "/usr/src/app"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": [
        "6379/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "categories": [
        "project-management",
        "Other",
        "Tools"
      ],
      "description": "Open-source project management tool",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "redmine",
          "label": "DATABASE_NAME",
          "name": "DATABASE_NAME"
        },
        {
          "default": "redmine",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "default": "",
          "label": "REDMINE_SECRET_KEY_BASE",
          "name": "REDMINE_SECRET_KEY_BASE"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/redmine.png",
      "name": "redmine",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.redmine.org/\" target=\"_blank\">https://www.redmine.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/redmine\" target=\"_blank\">https://hub.docker.com/_/redmine</a><br><br><br>Default user and password are admin/admin",
      "platform": "linux",
      "ports": [
        "4180:3000/tcp"
      ],
      "repository": {
        "stackfile": "stack/redmine.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "restart_policy": "unless-stopped",
      "title": "Redmine",
      "type": 3
    },
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": [
        "docker"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Requestrr",
      "name": "Requestrr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/requestrr/config</p>",
      "description": "[Requestrr](https://github.com/darkalfx/requestrr) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
      "categories": [
        "Media"
      ],
      "platform": "linux",
      "logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
      "image": "linuxserver/requestrr:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "4545:4545/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/requestrr/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Tools"
      ],
      "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/resilio-sync:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/resilio.png",
      "name": "resilio-sync",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Resilio Sync",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
          "container": "/config"
        },
        {
          "container": "/sync"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "type": 1,
      "title": "Roundcube Mail",
      "name": "roundcubemail",
      "description": "Roundcube webmail container with sqlite db.",
      "image": "roundcube/roundcubemail:latest",
      "categories": [
        "Mail"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "9002:80"
      ],
      "volumes": [
        {
          "container": "/var/www/html",
          "bind": "/portainer/AppData/Roundcube/App"
        },
        {
          "container": "/var/roundcube/db",
          "bind": "/portainer/AppData/Roundcube/DB"
        }
      ],
      "env": [
        {
          "name": "ROUNDCUBEMAIL_DB_TYPE",
          "label": "DB Type",
          "default": "sqlite"
        },
        {
          "name": "ROUNDCUBEMAIL_SKIN",
          "label": "Skin",
          "default": "elastic"
        },
        {
          "name": "ROUNDCUBEMAIL_DEFAULT_HOST",
          "label": "Default Host",
          "default": "tls://mail.example.org"
        },
        {
          "name": "ROUNDCUBEMAIL_SMTP_SERVER",
          "label": "SMTP Server",
          "default": "tls://mail.example.org"
        }
      ]
    },
    {
      "type": 1,
      "title": "Rsnapshot",
      "name": "Rsnapshot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/rsnapshot/config<br>mkdir -p /volume1/docker/rsnapshot/.snapshots<br>mkdir -p /volume1/docker/rsnapshot/data</p>",
      "description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
      "image": "linuxserver/rsnapshot:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/rsnapshot/config"
        },
        {
          "container": "/.snapshots",
          "bind": "/volume1/docker/rsnapshot/.snapshots"
        },
        {
          "container": "/data",
          "bind": "/volume1/docker/rsnapshot/data"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/sabnzbd:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sabnzbd-icon.png",
      "name": "sabnzbd",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "9090:9090/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SABnzbd",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Sabnzbd",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Downloads/incomplete",
          "container": "/incomplete-downloads"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "categories": [
        "database"
      ],
      "platform": "linux",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "ports": [
        "1433/tcp"
      ],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "categories": [
        "database"
      ],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "ports": [
        "1433/tcp"
      ],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "command": "",
      "description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "1000",
          "label": "USERID",
          "name": "USERID"
        },
        {
          "default": "1000",
          "label": "GROUPID",
          "name": "GROUPID"
        },
        {
          "default": "guest;guest",
          "label": "USER",
          "name": "USER"
        },
        {
          "default": "true",
          "label": "PERMISSIONS",
          "name": "PERMISSIONS"
        },
        {
          "default": "portainer;/share;yes;no;yes;guest",
          "label": "SHARE",
          "name": "SHARE"
        }
      ],
      "image": "dperson/samba:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/samba.png",
      "name": "Samba",
      "platform": "linux",
      "ports": [
        "139:139/tcp",
        "445:445/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "title": "Samba",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/share"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.samba.org/\" target=\"_blank\">https://www.samba.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dperson/samba\" target=\"_blank\">https://github.com/dperson/samba</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=2zZ3_1GRWrM&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=11\" target=\"_blank\">Setting up Raspberry Pi Samba Server For File Sharing on Docker</a><br><br>"
    },
    {
      "type": 1,
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "categories": [
        "storage"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "ports": [
        "8000/tcp"
      ],
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ]
    },
    {
      "type": 1,
      "title": "Scrutiny",
      "name": "Scrutiny",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/scrutiny/config<br></p>",
      "description": "[Scrutiny](https://github.com/AnalogJ/scrutiny) WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution, merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/docs/dashboard.png",
      "image": "linuxserver/scrutiny:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SCRUTINY_API_ENDPOINT",
          "label": "SCRUTINY_API_ENDPOINT",
          "default": "http://localhost:8080",
          "description": "# optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector"
        },
        {
          "name": "SCRUTINY_WEB",
          "label": "SCRUTINY_WEB",
          "default": "true",
          "description": "# optional - Run the web service."
        },
        {
          "name": "SCRUTINY_COLLECTOR",
          "label": "SCRUTINY_COLLECTOR",
          "default": "true",
          "description": "# optional - Run the metrics collector."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/scrutiny/config"
        },
        {
          "container": "/run/udev:ro",
          "bind": "/run/udev:ro"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "title": "Seafile",
      "type": 1,
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "platform": "linux",
      "image": "seafileltd/seafile:latest",
      "ports": [
        "8313:80/tcp"
      ],
      "env": [
        {
          "name": "SEAFILE_SERVER_HOSTNAME",
          "label": "Server URL",
          "default": "seafile.domain.com"
        },
        {
          "name": "SEAFILE_ADMIN_EMAIL",
          "label": "Admin Email",
          "default": "admin@domain.com"
        },
        {
          "name": "SEAFILE_ADMIN_PASSWORD",
          "label": "Admin Password",
          "default": "super_secret_password"
        }
      ],
      "volumes": [
        {
          "container": "/shared",
          "bind": "/home/andy/Seafile"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Open-Source Privacy-respecting metasearch engine",
      "env": [
        {
          "default": "http://localhost:9017",
          "label": "BASE_URL",
          "name": "BASE_URL"
        },
        {
          "default": "my-instance",
          "label": "INSTANCE_NAME",
          "name": "INSTANCE_NAME"
        }
      ],
      "image": "searxng/searxng:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/searx.png",
      "name": "SearXNG",
      "platform": "linux",
      "ports": [
        "9017:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SearXNG",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/searxng",
          "container": "/etc/searxng"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.searxng.org/\" target=\"_blank\">https://docs.searxng.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.searxng.org/admin/installation-docker.html\" target=\"_blank\">https://docs.searxng.org/admin/installation-docker.html</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/searxng.md\" target=\"_blank\">searxng.md</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "categories": [
        "Log Management",
        "Monitoring"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "name": "sematext-agent",
      "privileged": true,
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "title": "Sematext Docker Agent",
      "type": 2,
      "categories": [
        "Log Management",
        "Monitoring"
      ],
      "description": "Collect logs, metrics and docker events",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
      },
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
      "image": "radhifadlillah/shiori:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/shiori-icon.png",
      "name": "shiori",
      "platform": "linux",
      "ports": [
        "8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Shiori",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Shiori",
          "container": "/srv/shiori"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/sickchill:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sickchill-icon.png",
      "name": "sickchill",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SickChill",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/SickChill",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/sickgear:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sickgear-icon.png",
      "name": "sickgear",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SickGear",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/SickGear",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Management"
      ],
      "description": null,
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/smokeping:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/smokeping-icon.png",
      "name": "smokeping",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SmokePing",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Smokeping",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Smokeping",
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Snapdrop",
      "name": "Snapdrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snapdrop/config</p>",
      "description": "[Snapdrop](https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
      "image": "linuxserver/snapdrop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/snapdrop/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Self-hosted snippet manager.",
      "image": "snowmean/snibox-sqlite:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/snibox.png",
      "name": "snibox",
      "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
      "platform": "linux",
      "ports": [
        "3010:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Snibox",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Snibox",
          "container": "/app/db/database"
        }
      ]
    },
    {
      "type": 1,
      "title": "Snipe-it",
      "name": "Snipe-it",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snipe-it/config</p>",
      "description": "[Snipe-it](https://github.com/snipe/snipe-it) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
      "platform": "linux",
      "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
      "image": "linuxserver/snipe-it:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "http://localhost:8080",
          "description": "Hostname or IP and port if applicable, be sure to define https/http"
        },
        {
          "name": "MYSQL_PORT_3306_TCP_ADDR",
          "label": "MYSQL_PORT_3306_TCP_ADDR",
          "default": "<mysql host>",
          "description": "Mysql hostname or IP to use"
        },
        {
          "name": "MYSQL_PORT_3306_TCP_PORT",
          "label": "MYSQL_PORT_3306_TCP_PORT",
          "default": "<mysql port>",
          "description": "Mysql port to use"
        },
        {
          "name": "MYSQL_DATABASE",
          "label": "MYSQL_DATABASE",
          "default": "<mysql database>",
          "description": "Mysql database to use"
        },
        {
          "name": "MYSQL_USER",
          "label": "MYSQL_USER",
          "default": "<mysql pass>",
          "description": "Mysql user to use"
        },
        {
          "name": "MYSQL_PASSWORD",
          "label": "MYSQL_PASSWORD",
          "default": "changeme",
          "description": "Mysql password to use"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "8080:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/snipe-it/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "categories": [
        "search-engine"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": [
        "8983/tcp"
      ],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ]
    },
    {
      "categories": [
        "Downloaders",
        "Video"
      ],
      "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/sonarr:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sonarr-icon.png",
      "name": "sonarr",
      "platform": "linux",
      "ports": [
        "8989:8989/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sonarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Sonarr",
          "container": "/config"
        },
        {
          "bind": "/dev/rtc",
          "container": "/dev/rtc"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
      "env": [
        {
          "default": "latest-arm",
          "label": "arch",
          "name": "arch"
        },
        {
          "default": "true",
          "label": "OOKLA_EULA_GDPR",
          "name": "OOKLA_EULA_GDPR"
        }
      ],
      "image": "henrywhitaker3/speedtest-tracker:dev-arm",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
      "name": "speedtest-tracker",
      "platform": "linux",
      "ports": [
        "8765:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Speedtest Tracker",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
          "container": "/config"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Sqlitebrowser",
      "name": "Sqlitebrowser",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sqlitebrowser/config</p>",
      "description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
      "image": "linuxserver/sqlitebrowser:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/sqlitebrowser/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Tools",
        "Web"
      ],
      "description": "Sshwifty is a SSH and Telnet connector made for the Web. It can be deployed on your computer or server to provide SSH and Telnet access interface for any compatible (standard) web browser.",
      "image": "niruix/sshwifty:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/sshwifty-icon.png",
      "name": "Sshwifty",
      "platform": "linux",
      "ports": [
        "8182:8182/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sshwifty",
      "type": 1,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://sshwifty.herokuapp.com/\" target=\"_blank\">https://sshwifty.herokuapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nirui/sshwifty#docker-image\" target=\"_blank\">https://github.com/nirui/sshwifty#docker-image</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Swag",
      "name": "Swag",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/swag/config</p>",
      "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
      "platform": "linux",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
      "image": "linuxserver/swag:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "URL",
          "label": "URL",
          "default": "yourdomain.url",
          "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns)."
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "default": "http",
          "description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`)."
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)"
        },
        {
          "name": "CERTPROVIDER",
          "label": "CERTPROVIDER",
          "default": "",
          "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt."
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "default": "cloudflare",
          "description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `domeneshop`, `gandi`, `gehirn`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`."
        },
        {
          "name": "PROPAGATION",
          "label": "PROPAGATION",
          "default": "",
          "description": "Optionally override (in seconds) the default propagation time for the dns plugins."
        },
        {
          "name": "DUCKDNSTOKEN",
          "label": "DUCKDNSTOKEN",
          "default": "",
          "description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org"
        },
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
        },
        {
          "name": "ONLY_SUBDOMAINS",
          "label": "ONLY_SUBDOMAINS",
          "default": "false",
          "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`"
        },
        {
          "name": "EXTRA_DOMAINS",
          "label": "EXTRA_DOMAINS",
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`"
        },
        {
          "name": "STAGING",
          "label": "STAGING",
          "default": "false",
          "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes."
        }
      ],
      "ports": [
        "443:443/tcp",
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/swag/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Switch LAN play server",
      "name": "lan-play-server",
      "description": "Spins up a personal lan-play server for Nintendo Swich. You know what this does if you know about lan-play.",
      "image": "spacemeowx2/switch-lan-play",
      "categories": [
        "Games"
      ],
      "restart_policy": "unless-stopped",
      "ports": [
        "11451:11451/tcp",
        "11451:11451/udp"
      ]
    },
    {
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Tools"
      ],
      "description": null,
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/syncthing:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/syncthing-icon.png",
      "name": "syncthing",
      "platform": "linux",
      "ports": [
        "8384:8384/tcp",
        "21027:21027/udp",
        "22000:22000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SyncThing",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Syncthing",
          "container": "/config"
        },
        {
          "container": "/sync"
        }
      ]
    },
    {
      "type": 1,
      "title": "Synclounge",
      "name": "Synclounge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
      "image": "linuxserver/synclounge:latest",
      "env": [
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "AUTH_LIST",
          "label": "AUTH_LIST",
          "default": "plexuser1,plexuser2,email1,machineid1",
          "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces."
        },
        {
          "name": "AUTOJOIN_ENABLED",
          "label": "AUTOJOIN_ENABLED",
          "default": "false",
          "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var)."
        },
        {
          "name": "AUTOJOIN_ROOM",
          "label": "AUTOJOIN_ROOM",
          "default": "roomname",
          "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`)."
        }
      ],
      "ports": [
        "8088:8088/tcp"
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.[br][br]\r\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\r\n  [b]8181[/b] The webui for Tautulli's webui [br]\r\n  [b]/config[/b] Storing Configuration and the Tautulli database[br]\r\n[b]/logs[/b] Map to you plex logs (required for IP logging)[br]\r\n\r\n",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/tautulli:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tautulli-icon.png",
      "name": "tautulli",
      "platform": "linux",
      "ports": [
        "8181:8181/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tautulli",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Logs",
          "container": "/logs"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Tautulli",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Messenger"
      ],
      "description": "A self-hosted web IRC client",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/thelounge:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
      "name": "thelounge",
      "platform": "linux",
      "ports": [
        "9000:9000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "TheLounge",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TheLounge",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A unique, non-linear notebook wiki.",
      "image": "mazzolino/tiddlywiki:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tiddlywiki.png",
      "name": "tiddlywiki",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "TiddlyWiki",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TiddlyWiki",
          "container": "/var/lib/tiddlywiki"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lunik1/tt-rss:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tt-rss-icon.png",
      "name": "tt-rss",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tiny Tiny RSS",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/tt-rss",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Proxy",
        "Security",
        "Tools"
      ],
      "description": "Cloud-Native Networking Stack That Just Works.",
      "image": "traefik:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
      "name": "traefik",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><b>Pre-installation script must be RAN before you install: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">traefik.sh</a><br><br>A simple and lightweight reverse proxy",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Traefik",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
          "container": "/traefik.yml"
        },
        {
          "bind": "/portainer/Files/AppData/Config/traefik/config.yml",
          "container": "/config.yml"
        },
        {
          "bind": "/portainer/Files/AppData/Config/traefik/acme.json",
          "container": "/acme.json"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/transmission:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/transmission-icon.png",
      "name": "transmission",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp",
        "51413:51413/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Transmission",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Transmission",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/Downloads",
          "container": "/downloads"
        },
        {
          "container": "/watch"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "VPN",
        "Tools"
      ],
      "description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "MULLVAD",
          "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
          "label": "OPENVPN_PROVIDER",
          "name": "OPENVPN_PROVIDER"
        },
        {
          "default": "",
          "label": "OPENVPN_USERNAME",
          "name": "OPENVPN_USERNAME"
        },
        {
          "default": "",
          "label": "OPENVPN_PASSWORD",
          "name": "OPENVPN_PASSWORD"
        },
        {
          "default": "192.168.0.0/24",
          "label": "LOCAL_NETWORK",
          "name": "LOCAL_NETWORK"
        }
      ],
      "image": "haugene/transmission-openvpn:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/transmission-icon.png",
      "name": "transmission-openvpn",
      "note": "List of supported providers available here.",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Transmission-OpenVPN",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/data"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        }
      ]
    },
    {
      "categories": [
        "Video",
        "Other"
      ],
      "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/tvheadend:latest",
      "logo": "http://i.imgur.com/zGSUAT4.png",
      "name": "tvheadend",
      "platform": "linux",
      "ports": [
        "9981:9981/tcp",
        "9982:9982/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tvheadend",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TVHeadend",
          "container": "/config"
        },
        {
          "container": "/recordings"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Books"
      ],
      "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
      "env": [
        {
          "label": "MAXMEM",
          "name": "MAXMEM",
          "set": "512"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/ubooquity:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ubooquity-icon.png",
      "name": "ubooquity",
      "platform": "linux",
      "ports": [
        "2202:2202/tcp",
        "2203:2203/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ubooquity",
      "type": 1,
      "volumes": [
        {
          "container": "/books"
        },
        {
          "container": "/comics"
        },
        {
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "categories": [
        "operating-system"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "categories": [
        "Management",
        "Tools"
      ],
      "description": null,
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/unifi-controller:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/unifi-icon.png",
      "name": "unifi-controller",
      "platform": "linux",
      "ports": [
        "3478:3478/udp",
        "10001:10001/udp",
        "8080:8080/tcp",
        "8081:8081/tcp",
        "8443:8443/tcp",
        "8843:8843/tcp",
        "8880:8880/tcp",
        "6789:6789/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "UniFi Controller",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Unifi",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "CCTV"
      ],
      "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti’s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature‑packed user interface with advanced features such as motion detection, auto‑discovery, user‑level security, storage management, reporting, and mobile device support.",
      "env": [
        {
          "default": "99",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "002",
          "label": "UMASK",
          "name": "UMASK"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "UniFi Video"
        }
      ],
      "image": "pducharme/unifi-video-controller:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/UniFiVideo-logo.png",
      "name": "UniFi Video",
      "platform": "linux",
      "ports": [
        "1935:1935/tcp",
        "7444:7444/tcp",
        "7447:7447/tcp",
        "6666:6666/tcp",
        "7442:7442/tcp",
        "7080:7080/tcp",
        "7443:7443/tcp",
        "7445:7445/tcp",
        "7446:7446/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "UniFi Video",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
          "container": "/recordings"
        },
        {
          "bind": "/portainer/Files/AppData/Config/UniFiVideo/",
          "container": "/config"
        }
      ]
    },
    {
      "type": 1,
      "title": "Urbackup",
      "description": "Open-source network backup",
      "categories": [
        "backup"
      ],
      "platform": "linux",
      "note": "This application web interface is exposed on the port 55414 inside the container.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
      "image": "cfstras/urbackup",
      "ports": [
        "55413/tcp",
        "55414/tcp",
        "55415/tcp",
        "35622/tcp"
      ],
      "volumes": [
        {
          "container": "/var/urbackup"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
      "image": "vaultwarden/server:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "name": "vaultwarden",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Vaultwarden",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Vaultwarden",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Web",
        "Management",
        "todo"
      ],
      "description": "Vikunja With Frontend.  The to-do app to organize your life.  Must run tools/install_vikunja.sh before installing the template.  More informantion at https://vikunja.io/",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "vikunja",
          "label": "DATABASE_NAME",
          "name": "DATABASE_NAME"
        },
        {
          "default": "vikunja",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vikunja.png",
      "name": "vikunja",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/vikunja.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Vikunja With Frontend",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://vikunja.io/\" target=\"_blank\">https://vikunja.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy\" target=\"_blank\">https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy</a><br><br><b>Pre-installation script must be RAN before you install: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_vikunja.sh\" target=\"_blank\">install_vikunja.sh</a><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "This is a replacement for Microsoft's KMS server.",
      "image": "mikolatero/vlmcsd:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vlmcsd.png",
      "name": "vlmcsd-kms",
      "platform": "linux",
      "ports": [
        "1688:1688/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Vlmcsd - KMS",
      "type": 1,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mikolatero/vlmcsd\" target=\"_blank\">https://hub.docker.com/r/mikolatero/vlmcsd</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/mikolatero/docker-vlmcsd\" target=\"_blank\">https://github.com/mikolatero/docker-vlmcsd</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Wallabag + SQlite",
      "name": "wallabag",
      "description": "wallabag is a self hostable application for saving web pages. With this application you will not miss content anymore. Click, save, read it when you want. It saves the content you select so that you can read it when you have time.",
      "image": "wallabag/wallabag",
      "note": "TESTING - This template uses SQLite only. Default user & pass = wallabag",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/var/www/wallabag/data"
        },
        {
          "container": "/var/www/wallabag/web/assets/images"
        }
      ],
      "ports": [
        "9841:80/tcp"
      ],
      "env": [
        {
          "name": "SYMFONY__ENV__DOMAIN_NAME",
          "label": "Domain Name",
          "default": "https://wallabag.yourdomain.com"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Maintenance"
      ],
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "image": "containrrr/watchtower:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/watchtower.png",
      "name": "watchtower",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Watchtower",
      "type": 1,
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n\t\thttp://www.webgrabplus.com/[br]\r\n\t\t[b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n\t\t[b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n\t\t[b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/webgrabplus:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/webgrabplus.png",
      "name": "webgrabplus",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "WebGrab+Plus",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/WebGrabPlus",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/WebGrabPlus",
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Webtop",
      "name": "Webtop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webtop/config<br></p>",
      "description": "[Webtop](https://github.com/linuxserver/gclient) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
      "categories": [
        "Utilities"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
      "image": "linuxserver/webtop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
        },
        {
          "name": "KEYBOARD",
          "label": "KEYBOARD",
          "default": "en-us-qwerty",
          "description": "See the keyboard layouts section for more information and options."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/webtop/config"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
      "image": "benbusby/whoogle-search:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/whoogle.png",
      "name": "whoogle",
      "platform": "linux",
      "ports": [
        "5001:5000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Whoogle",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Whoogle",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
      "image": "lscr.io/linuxserver/wikijs:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/wikijs.png",
      "name": "wikijs",
      "platform": "linux",
      "ports": [
        "3100:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wikijs",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs/data",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A Docker image for Windows 2000 Advanced Server with SP4.",
      "image": "hectormolinero/qemu-win2000:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/win2000.png",
      "name": "win2000",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000#start-an-instance\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000#start-an-instance</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=57Gnp0424Qc&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=13\" target=\"_blank\">Checking out Windows 2000 Docker</a><br><br>Why? Your scientists were so preoccupied with whether or not they could, that they didn't stop to think if they should. -- Dr. Ian Malcolm",
      "platform": "linux",
      "ports": [
        "3389:3389/tcp",
        "5900:5900/tcp",
        "6080:6080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Windows 2000",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Win2000/zdrive",
          "container": "/mnt"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "VPN"
      ],
      "description": "Fast VPN Server with easy to use User Interface",
      "env": [
        {
          "default": "example.domain.com",
          "description": "Set here your DDNS domain",
          "label": "WG_HOST",
          "name": "WG_HOST"
        },
        {
          "default": "ENTER AN ADMIN PASSWORD",
          "description": "Leave blank to access WebUI without loggin",
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "default": "51820",
          "label": "WG_PORT",
          "name": "WG_PORT"
        },
        {
          "default": "1.1.1.1",
          "label": "WG_DEFAULT_DNS",
          "name": "WG_DEFAULT_DNS"
        },
        {
          "default": "10.8.0.x",
          "label": "WG_DEFAULT_ADDRESS",
          "name": "WG_DEFAULT_ADDRESS"
        },
        {
          "default": "0.0.0.0/0, ::/0",
          "label": "WG_ALLOWED_IPS",
          "name": "WG_ALLOWED_IPS"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wireguard.png",
      "name": "wg-easy",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/wireguard-easy.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "Wireguard Server",
      "type": 3,
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/WeeJeWel/wg-easy/\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/WeeJeWel/wg-easy/#1-install-docker\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/#1-install-docker</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wireguard-install.md\" target=\"_blank\">wireguard-install.md</a><br><br><br>"
    },
    {
      "type": 1,
      "title": "Wireshark",
      "name": "Wireshark",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
      "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
      "image": "linuxserver/wireshark:latest",
      "network": "host",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/wireshark/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 3,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "categories": [
        "WordPress",
        "Web"
      ],
      "description": "Wordpress setup with a MySQL database",
      "env": [
        {
          "default": "5080",
          "label": "External Port for webserver forward to port 80",
          "name": "WEB_SERVER_PORT"
        },
        {
          "default": "wordpress",
          "label": "Database user name",
          "name": "MYSQL_DATABASE_USER_NAME"
        },
        {
          "label": "Database password for user",
          "name": "MYSQL_DATABASE_PASSWORD"
        },
        {
          "label": "Database root password",
          "name": "MYSQL_DATABASE_ROOT_PASSWORD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wordpress.png",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://wordpress.com/\" target=\"_blank\">https://wordpress.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wordpress_installation.md\" target=\"_blank\">wordpress_installation.md</a><br><br><br>Deploys a Wordpress instance connected to a MySQL database.",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/wordpress-stack.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "Wordpress",
      "type": 3
    },
    {
      "type": 4,
      "title": "Wordpress",
      "description": "Wordpress setup with a MySQL database",
      "note": "Deploys a Wordpress instance connected to a MySQL database.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/wordpress/edge/docker-stack.yml"
    },
    {
      "type": 3,
      "title": "Wordpress + MariaDB",
      "description": "Wordpress setup with a MariaDB",
      "note": "Deploys a Wordpress instance connected to a MariaDB.",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/wordpress/wordpress+mariadb.yml"
      },
      "env": [
        {
          "name": "DB_PASSWORD",
          "label": "Database password",
          "description": "Password used by the MariaDB Wordpress user."
        },
        {
          "name": "DB_ROOT_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MariaDB root user."
        },
        {
          "name": "WP_PORT",
          "label": "Port",
          "default": "9842"
        }
      ]
    },
    {
      "type": 3,
      "title": "Wordpress + MySQL",
      "description": "Wordpress setup with a MySQL database",
      "note": "Deploys a Wordpress instance connected to a MySQL database.",
      "categories": [
        "CMS"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/AndyYangUK/portainer_templates",
        "stackfile": "stacks/wordpress/wordpress+mysql.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 1,
      "title": "Wowza",
      "description": "Streaming media server",
      "categories": [
        "streaming"
      ],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
      "image": "sameersbn/wowza:4.1.2-8",
      "env": [
        {
          "name": "WOWZA_ACCEPT_LICENSE",
          "label": "Agree to Wowza EULA",
          "set": "yes"
        },
        {
          "name": "WOWZA_KEY",
          "label": "License key"
        }
      ],
      "ports": [
        "1935/tcp",
        "8086/tcp",
        "8087/tcp",
        "8088/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/wowza"
        }
      ]
    },
    {
      "type": 1,
      "title": "Xbackbone",
      "name": "Xbackbone",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/xbackbone/config</p>",
      "description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
      "image": "linuxserver/xbackbone:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/xbackbone/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
      "image": "selfhostedpro/yacht:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
      "name": "yacht",
      "platform": "linux",
      "ports": [
        "8001:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Yacht",
      "type": 1,
      "volumes": [
        {
          "bind": "yacht",
          "container": "/config"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Downloaders"
      ],
      "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
      "image": "tzahi12345/youtubedl-material:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
      "name": "youtubedl-material",
      "platform": "linux",
      "ports": [
        "17442:17442/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "YouTubeDL-Material",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/YTDLM",
          "container": "/app/appdata"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Video",
          "container": "/app/video"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
          "container": "/app/subscriptions"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Users",
          "container": "/app/users"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Audio",
          "container": "/app/audio"
        }
      ]
    },
    {
      "type": 1,
      "title": "Yq",
      "name": "Yq",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/yq/config</p>",
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
      "platform": "linux",
      "logo": "",
      "image": "linuxserver/yq:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1024",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Europe/Amsterdam",
          "description": "Specify a timezone to use for example Europe/Amsterdam"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/volume1/docker/yq/config"
        }
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "categories": [
        "Messenger"
      ],
      "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/znc:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/znc-icon.png",
      "name": "znc",
      "platform": "linux",
      "ports": [
        "6501:6501/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ZNC",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ZNC",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "An alternative private front-end to Reddit",
      "image": "spikecodes/libreddit:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/libreddit.png",
      "name": "libreddit",
      "platform": "linux",
      "ports": [
        "8088:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "libreddit",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/libreddit",
          "container": "/config"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://libreddit.silkky.cloud/\" target=\"_blank\">https://libreddit.silkky.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/spikecodes/libreddit#2-docker\" target=\"_blank\">https://github.com/spikecodes/libreddit#2-docker</a><br><br><br>"
    },
    {
      "categories": [
        "Downloaders",
        "Music"
      ],
      "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/lidarr:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lidarr.png",
      "name": "lidarr",
      "platform": "linux",
      "ports": [
        "8686:8686/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "lidarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Lidarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "n8n is an extendable workflow automation tool.",
      "env": [
        {
          "default": "true",
          "label": "N8N_BASIC_AUTH_ACTIVE",
          "name": "N8N_BASIC_AUTH_ACTIVE"
        },
        {
          "default": "admin",
          "label": "N8N_BASIC_AUTH_USER",
          "name": "N8N_BASIC_AUTH_USER"
        },
        {
          "default": "admin",
          "label": "N8N_BASIC_AUTH_PASSWORD",
          "name": "N8N_BASIC_AUTH_PASSWORD"
        }
      ],
      "image": "n8nio/n8n:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/n8n.jpg",
      "name": "n8n",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://n8n.io/\" target=\"_blank\">https://n8n.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.n8n.io/getting-started/installation/#docker\" target=\"_blank\">https://docs.n8n.io/getting-started/installation/#docker</a><br><br><br>Documentation is Available <a href='https://docs.n8n.io/'>here</a>",
      "platform": "linux",
      "ports": [
        "5678:5678/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "n8n",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/n8n",
          "container": "/home/node/.n8n"
        }
      ]
    },
    {
      "type": 1,
      "title": "phpmyadmin",
      "name": "phpmyadmin",
      "image": "phpmyadmin/phpmyadmin",
      "description": "Use this to control your MySQL/MariaDB database.",
      "categories": [
        "Database"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "note": "Make sure to select the correct network!",
      "ports": [
        "80/tcp"
      ],
      "env": [
        {
          "name": "PMA_HOST",
          "label": "Database Host"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root Password"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/qbittorrent:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/qbittorrent-icon.png",
      "name": "qbittorrent",
      "platform": "linux",
      "ports": [
        "6881:6881/tcp",
        "6881:6881/udp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "qBittorrent",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/qBittorrent",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Downloaders"
      ],
      "description": "Popular torrent client with a webui for ease of use.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/rutorrent:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
      "name": "rutorrent",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "51413:51413/tcp",
        "6881:6881/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ruTorrent",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ruTorrent",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Music"
      ],
      "description": "Self hosted Spotify tracking dashboard.",
      "env": [
        {
          "default": "3081",
          "label": "API Port",
          "name": "__api_port__"
        },
        {
          "default": "3080",
          "label": "Client Port",
          "name": "__client_port__"
        },
        {
          "default": "http://192.168.X.Y:3080",
          "label": "Client Endpoint",
          "name": "__client_endpoint__",
          "description": "If you have changed the default client port don't forget to change it here too."
        },
        {
          "default": "http://192.168.X.Y:3081",
          "label": "API Endpoint",
          "name": "__api_endpoint__",
          "description": "If you have changed the default API port don't forget to change it here too."
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "description": "Create a Spotify App and copy the Client ID: https://developer.spotify.com/dashboard/applications",
          "label": "Spotify Client ID",
          "name": "__your_spotify_client_id__"
        },
        {
          "description": "Copy the Client Secret: https://developer.spotify.com/dashboard/applications",
          "label": "Spotify Client Secret",
          "name": "__your_spotify_secret__"
        }
      ],
      "name": "Your Spotify",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Yooooomi/your_spotify\" target=\"_blank\">https://github.com/Yooooomi/your_spotify</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Yooooomi/your_spotify#readme\" target=\"_blank\">https://github.com/Yooooomi/your_spotify#readme</a><br><br><br>Create a Spotify App here: https://developer.spotify.com/dashboard/applications. Don't forget adding Redirect URL: http://192.168.X.Y:3081/oauth/spotify/callback under edit settings of the dashboard.",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/your-spotify.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "your-spotify",
      "type": 3
    }
  ]
}
